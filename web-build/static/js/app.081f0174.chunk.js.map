{"version":3,"sources":["components/img/arduino.png","components/screens/Login.js","components/api.js","components/screens/dashboard.js","App.js"],"names":["module","exports","Login","navigation","useToast","useState","NativeBaseProvider","Center","_dark","bg","_light","px","flex","React","username","setUsername","password","setPassword","statusLogin","setstatusLogin","setToken","userError","pwsError","warning_error","a","async","AsyncStorage","getItem","value","getData","loginState","gettoken","token","setItem","navigate","Box","alignItems","w","borderRadius","shadow","maxWidth","Image","source","arduino","alt","size","Heading","top","fontSize","FormControl","marginTop","isInvalid","Stack","mx","Label","Input","borderBottomColor","variant","type","placeholder","onChangeText","HelperText","ErrorMessage","leftIcon","WarningOutline","marginBottom","Button","colorScheme","onPress","axios","get","params","req","then","response","console","log","data","Text","color","create","baseURL","DashBorard","setData","copyText","setCopyText","useEffect","useClipboard","onCopy","warning","h","safeAreaBottom","safeAreaTop","maxW","justifyContent","left","HStack","name","TouchableOpacity","space","arduinoid","showModal","setShowModal","Switch_1","setSwitch_1","Switch_2","setSwitch_2","Switch_3","setSwitch_3","Switch_4","setSwitch_4","Switch_5","setSwitch_5","Switch_6","setSwitch_6","Switch_7","setSwitch_7","Switch_8","setSwitch_8","Switch_9","setSwitch_9","Switch_10","setSwitch_10","Switch_11","setSwitch_11","Switch_12","setSwitch_12","Switch_13","setSwitch_13","Switch_14","setSwitch_14","Switch_15","setSwitch_15","borderTopRadius","ScrollView","horizontal","showsHorizontalScrollIndicator","AntDesign","Modal","isOpen","onClose","Content","Body","VStack","Switch","onChange","isChecked","_web","alignContent","Entypo","Badge","_text","FontAwesome","FontAwesome5","bottom","Link","href","isExternal","filter","Spinner","accessibilityLabel","createNativeStackNavigator","App","loginStatus","setLoginState","NavigationContainer","Navigator","initialRouteName","Screen","component","options","headerShown","headerBackVisible"],"mappings":"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","file":"static/js/app.081f0174.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arduino.8769f0a4.png\";","import * as React from 'react';\nimport {\n    Text,\n    Link,\n    HStack,\n    Center,\n    Heading,\n    Switch,\n    useColorMode,\n    NativeBaseProvider,\n    extendTheme,\n    VStack,\n    Code,\n    Box,\n    FormControl,\n    Input,\n    Stack,\n    WarningOutlineIcon,\n    ZStack,\n    Image,\n    Button,\n    Container,\n    useToast\n} from \"native-base\";\nimport axios from 'axios';\nimport arduino from '../img/arduino.png';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n\n\nexport default function Login({ navigation }) {\n    const toast = useToast();\n    const [data, setData] = useState('');\n\n    const BoxForm = () => {\n        const [username, setUsername] = React.useState(\"\");\n        const [password, setPassword] = React.useState(\"\");\n        const [statusLogin, setstatusLogin] = React.useState(\"\");\n\n        const [token, setToken] = React.useState(\"\");\n        var userError = ''\n        var pwsError = ''\n\n\n        function Login() {\n            axios.get('https://apiarduinowebcontrol.herokuapp.com/', {\n                params: {\n                    req: 'login',\n                    username: username,\n                    password: password\n                }\n            })\n                .then(function (response) {\n                    // manipula o sucesso da requisição\n                    console.log(response.data);\n                    setstatusLogin(response.data)\n                })\n        }\n    \n\n\n\n        if (statusLogin.warning_error == \"User does not exist\") {\n            var userError = true;\n        } else {\n            var userError = false;\n        }\n        if (statusLogin.warning_error == \"Incorrect password\") {\n            var pwsError = true;\n        } else {\n            var pwsError = false;\n        }\n        const getData = async () => {\n            try {\n                const value = await AsyncStorage.getItem('token')\n\n                if (value !== null) {\n                    setToken(value)\n\n                }\n            } catch (e) {\n            }\n        }\n        getData()\n\n\n        if (statusLogin.loginState == \"Login done\") {\n            var gettoken = statusLogin.token;\n            var gg = AsyncStorage.setItem('token', gettoken)\n            var lgg = AsyncStorage.setItem('LoginSave', 'DashBorard')\n            navigation.navigate('DashBorard')\n\n\n\n        }\n    \n\n\n\n       \n\n\n        return <Box alignItems=\"center\" w={'xs'} bg={'light.50'} borderRadius={10} shadow={5}>\n            <Box w=\"90%\" maxWidth=\"300px\">\n                <Center>\n                    <Image source={arduino} alt=\"Inicial Logo\" size=\"200\" />\n                    <Heading top={1} fontSize={22}>ArduinoHomeControl</Heading>\n\n                </Center>\n\n                <FormControl marginTop={5} isInvalid={userError}>\n                    <Stack mx=\"4\" >\n                        <FormControl.Label >Usuário </FormControl.Label>\n                        <Input borderBottomColor={'light.200'} variant=\"underlined\" type=\"user\" placeholder=\"\" \n                            onChangeText={(value) => setUsername(value)}\n                        ></Input>\n                        <FormControl.HelperText>\n\n                        </FormControl.HelperText>\n                        <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                            Usuário não existe\n                        </FormControl.ErrorMessage>\n                    </Stack>\n                </FormControl>\n                <FormControl marginBottom={5} isInvalid={pwsError}>\n                    <Stack mx=\"4\" >\n                        <FormControl.Label >Senha</FormControl.Label>\n                        <Input borderBottomColor={'light.200'} type=\"password\" variant=\"underlined\" placeholder=\"*******\"\n                            onChangeText={setPassword} />\n\n                        <FormControl.HelperText>\n\n                        </FormControl.HelperText>\n                        <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                            Senha incorreta\n                        </FormControl.ErrorMessage>\n                    </Stack>\n                </FormControl>\n\n                <Box alignItems=\"center\" marginBottom={5}>\n                    <Button bg={'indigo.800'} w={'50%'} variant={\"solid\"} colorScheme={'indigo'} borderRadius={20} onPress={() => Login()}>\n                        <Text color={'light.50'}>Entrar</Text>\n                    </Button>\n                </Box>\n\n            </Box>\n        </Box>;\n\n    };\n    return (\n        <NativeBaseProvider>\n            <Center\n                _dark={{ bg: \"blueGray.900\" }}\n                _light={{ bg: \"violet.900\" }}\n                px={4}\n                flex={1}\n\n            >\n                <BoxForm></BoxForm>\n                <Heading top={4} size={'xs'} color={'#f5f3ff'}>Não possui conta? <Heading color={'white'} size={'xs'}>Clique aqui</Heading></Heading>\n\n\n\n\n            </Center>\n        </NativeBaseProvider>\n    );\n\n}","import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'https://apiarduinowebcontrol.herokuapp.com/',\n});\nexport default api;","import React from \"react\";\nimport { NativeBaseProvider, Modal, Actionsheet, Spinner, useClipboard, Box, Text, Badge, Divider, Heading, VStack, Switch, FormControl, Input, Link, Button, Icon, HStack, Center, Pressable, View, Container, ZStack, ScrollView, Toast } from \"native-base\";\nimport { MaterialCommunityIcons, MaterialIcons } from \"@expo/vector-icons\";\nimport { TouchableOpacity } from \"react-native\";\nimport { Entypo } from '@expo/vector-icons';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { FontAwesome } from '@expo/vector-icons';\n\nimport { AntDesign } from '@expo/vector-icons';\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from \"axios\";\nimport api from \"../api\";\nimport { useDisclose } from \"native-base\";\nimport { useToast } from \"native-base\";\n\nexport default function DashBorard({ navigation }) {\n  const [token, setToken] = React.useState(\"\");\n  const [data, setData] = React.useState(\"\");\n  const [copyText, setCopyText] = React.useState(\"\");\n\n\n\n  const getData = async () => {\n    try {\n      const value = await AsyncStorage.getItem('token')\n      if (value !== null) {\n        setToken(value)\n      }\n    } catch (e) {\n    }\n  }\n\n  function DataHome() {\n    axios.get('https://apiarduinowebcontrol.herokuapp.com/', {\n      params: {\n        req: 'painel',\n        token: token,\n        filter: 'all'\n      }\n    })\n      .then(function (response) {\n        console.log(response.data);\n        setData(response.data)\n        setCopyText(response.data.arduinoid)\n      })\n  }\n\n  useEffect(() => {\n    getData();\n  })\n  function CorpoBody() {\n    const { value, onCopy } = useClipboard();\n\n\n    function Head() {\n      return (\n        <Box>\n          <Box left={3} top={5}>\n\n            <HStack justifyContent=\"space-between\" w={'90%'}>\n              <Heading fontSize={30}>Olá, {data.name}</Heading>\n            </HStack>\n\n            <TouchableOpacity onPress={() => onCopy(copyText)}>\n              <HStack space={1}>\n                <Heading fontSize={15} color={'violet.600'}>Arduino ID: {data.arduinoid}</Heading>\n              </HStack>\n            </TouchableOpacity>\n\n          </Box>\n        </Box>\n      )\n    }\n\n\n    function BodyOptions() {\n      const [showModal, setShowModal] = useState(false);\n      const [Switch_1, setSwitch_1] = useState();\n      const [Switch_2, setSwitch_2] = useState();\n      const [Switch_3, setSwitch_3] = useState();\n      const [Switch_4, setSwitch_4] = useState();\n      const [Switch_5, setSwitch_5] = useState();\n      const [Switch_6, setSwitch_6] = useState();\n      const [Switch_7, setSwitch_7] = useState();\n      const [Switch_8, setSwitch_8] = useState();\n      const [Switch_9, setSwitch_9] = useState();\n      const [Switch_10, setSwitch_10] = useState();\n      const [Switch_11, setSwitch_11] = useState();\n      const [Switch_12, setSwitch_12] = useState();\n      const [Switch_13, setSwitch_13] = useState();\n      const [Switch_14, setSwitch_14] = useState();\n      const [Switch_15, setSwitch_15] = useState();\n\n      \n\n\n\n\n      return (\n\n        <Box bg={'violet.800'} w={'100%'} h={'81%'} borderTopRadius={45} shadow={5}>\n          <Center>\n            <ScrollView borderRadius={10} horizontal={true} w={'80%'} h={81} top={3} showsHorizontalScrollIndicator={false}>\n              <HStack space={4}>\n                <Box w={100} h={'100%'} bg={'light.100'} borderRadius={10} shadow={5}>\n                  <Center top={4}>\n                    <Heading fontSize={30}>0</Heading>\n                    <Heading fontSize={10}>Luzes ligadas</Heading>\n                  </Center>\n                </Box>\n                <Box w={100} h={'100%'} bg={'light.100'} borderRadius={10} shadow={5}>\n                  <Center top={4}>\n                    <AntDesign name=\"user\" size={35} color=\"black\" />\n                    <Heading fontSize={10}>Conta</Heading>\n                  </Center>\n                </Box>\n                <Box w={100} h={'100%'} bg={'light.100'} borderRadius={10} shadow={5}>\n                  <Center top={4}>\n                    <AntDesign name=\"github\" size={35} color=\"black\" />\n                    <Heading fontSize={10}>Docs GitHub</Heading>\n                  </Center>\n                </Box>\n                <Box w={100} h={'100%'} bg={'light.100'} borderRadius={10} shadow={5}>\n                  <Center top={4}>\n                    <AntDesign name=\"setting\" size={35} color=\"black\" />\n                    <Heading fontSize={10}>Configurações</Heading>\n                  </Center>\n                </Box>\n              </HStack>\n            </ScrollView>\n\n          </Center>\n\n          <Box bg={'violet.700'} w={'100%'} h={'80%'} top={'5%'} borderTopRadius={45} shadow={5} >\n            <Center top={50}>\n              <Modal isOpen={showModal} onClose={() => setShowModal(false)}>\n                <Modal.Content maxWidth=\"400px\">\n\n                  <Modal.Body>\n                    <Center>\n                    <HStack space={9}>\n\n                      <VStack space={2}>\n                        <Center>\n                          <Switch size=\"md\"\n                            colorScheme=\"violet\"\n                            onChange={() => setSwitch_1(!Switch_1)}\n                            isChecked={Switch_1} />\n                          <Heading fontSize={10}>Luz 1</Heading>\n                        </Center>\n\n                        <Center>\n                          <Switch size=\"md\"\n                            colorScheme=\"violet\"\n                            onChange={() => setSwitch_2(!Switch_2)}\n                            isChecked={Switch_2} />\n                          <Heading fontSize={10}>Luz 2</Heading>\n                        </Center>\n\n                        <Center>\n                          <Switch size=\"md\"\n                            colorScheme=\"violet\"\n                            onChange={() => setSwitch_3(!Switch_3)}\n                            isChecked={Switch_3} />\n                          <Heading fontSize={10}>Luz 3</Heading>\n                        </Center>\n\n                        <Center>\n                          <Switch size=\"md\"\n                            colorScheme=\"violet\"\n                            onChange={() => setSwitch_4(!Switch_4)}\n                            isChecked={Switch_4} />\n                          <Heading fontSize={10}>Luz 4</Heading>\n                        </Center>\n\n                        <Center>\n                          <Switch size=\"md\"\n                            colorScheme=\"violet\"\n                            onChange={() => setSwitch_5(!Switch_5)}\n                            isChecked={Switch_5} />\n                          <Heading fontSize={10}>Luz 5</Heading>\n                        </Center>\n\n                      </VStack>\n\n                      <VStack space={2}>\n                        <Center>\n                          <Switch size=\"md\"\n                            colorScheme=\"violet\"\n                            onChange={() => setSwitch_6(!Switch_6)}\n                            isChecked={Switch_6} />\n                          <Heading fontSize={10}>Luz 6</Heading>\n                        </Center>\n\n                        <Center>\n                          <Switch size=\"md\"\n                            colorScheme=\"violet\"\n                            onChange={() => setSwitch_7(!Switch_7)}\n                            isChecked={Switch_7} />\n                          <Heading fontSize={10}>Luz 7</Heading>\n                        </Center>\n\n                        <Center>\n                          <Switch size=\"md\"\n                            colorScheme=\"violet\"\n                            onChange={() => setSwitch_8(!Switch_8)}\n                            isChecked={Switch_8} />\n                          <Heading fontSize={10}>Luz 8</Heading>\n                        </Center>\n\n                        <Center>\n                          <Switch size=\"md\"\n                            colorScheme=\"violet\"\n                            onChange={() => setSwitch_9(!Switch_9)}\n                            isChecked={Switch_9} />\n                          <Heading fontSize={10}>Luz 9</Heading>\n                        </Center>\n\n                        <Center>\n                          <Switch size=\"md\"\n                            colorScheme=\"violet\"\n                            onChange={() => setSwitch_10(!Switch_10)}\n                            isChecked={Switch_10} />\n                          <Heading fontSize={10}>Luz 10</Heading>\n                        </Center>\n\n                      </VStack>\n\n                      <VStack space={2}>\n                        <Center>\n                          <Switch size=\"md\"\n                            colorScheme=\"violet\"\n                            onChange={() => setSwitch_11(!Switch_11)}\n                            isChecked={Switch_11} />\n                          <Heading fontSize={10}>Luz 11</Heading>\n                        </Center>\n\n                        <Center>\n                          <Switch size=\"md\"\n                            colorScheme=\"violet\"\n                            onChange={() => setSwitch_12(!Switch_12)}\n                            isChecked={Switch_12} />\n                          <Heading fontSize={10}>Luz 12</Heading>\n                        </Center>\n\n                        <Center>\n                          <Switch size=\"md\"\n                            colorScheme=\"violet\"\n                            onChange={() => setSwitch_13(!Switch_13)}\n                            isChecked={Switch_13} />\n                          <Heading fontSize={10}>Luz 13</Heading>\n                        </Center>\n\n                        <Center>\n                          <Switch size=\"md\"\n                            colorScheme=\"violet\"\n                            onChange={() => setSwitch_14(!Switch_14)}\n                            isChecked={Switch_14} />\n                          <Heading fontSize={10}>Luz 14</Heading>\n                        </Center>\n\n                        <Center>\n                          <Switch size=\"md\"\n                            colorScheme=\"violet\"\n                            onChange={() => setSwitch_15(!Switch_15)}\n                            isChecked={Switch_15} />\n                          <Heading fontSize={10}>Luz 15</Heading>\n                        </Center>\n\n                      </VStack>\n\n                    </HStack>\n                    </Center>\n\n                  </Modal.Body>\n                </Modal.Content>\n              </Modal>\n\n\n              <HStack space={9} _web={{ w: '60%', alignContent: 'center', alignItems: 'center' }}>\n\n\n\n\n\n\n\n\n\n\n\n\n\n                <Button onPress={() => setShowModal(true)} colorScheme={'warning'} shadow={1} bg={'warning.500'} w={'40%'} h={120} borderRadius={10} >\n                  <Center>\n                    <Entypo name=\"light-bulb\" size={54} color=\"#f5f5f4\" />\n                    <Heading fontSize={20} color={'#f5f5f4'}>Luzes</Heading>\n                    <Badge bg={'#FF0000'} borderRadius={10} _text={{ fontSize: 8, color: 'white' }}>Em desenvolvimento</Badge>\n                  </Center>\n                </Button>\n\n                <Button shadow={1} colorScheme={'lightBlue'} bg={'lightBlue.500'} w={'40%'} h={120} borderRadius={10}>\n                  <Center>\n                    <FontAwesome name=\"thermometer-4\" size={54} color=\"#f5f5f4\" />\n                    <Heading fontSize={20} color={'#f5f5f4'}>AC</Heading>\n                  </Center>\n                  <Badge bg={'#FF0000'} borderRadius={10} _text={{ fontSize: 8, color: 'white' }}>Em desenvolvimento</Badge>\n                </Button>\n\n              </HStack>\n\n              <Button shadow={1} colorScheme={'indigo'} bg={'indigo.500'} w={'90%'} h={120} top={5} borderRadius={10}>\n                <Center >\n                  <FontAwesome5 name=\"faucet\" size={54} color=\"#f5f5f4\" />\n                  <Heading fontSize={20} color={'#f5f5f4'}>Jardim</Heading>\n                  <Badge bg={'#FF0000'} borderRadius={10} _text={{ fontSize: 8, color: 'white' }}>Em desenvolvimento</Badge>\n                </Center>\n              </Button>\n\n            </Center>\n\n          </Box>\n\n          <Box alignItems=\"center\" bottom={3}>\n            <HStack>\n              <Link href=\"https://github.com/birdra1n\" isExternal>\n                <Heading color={'white'} fontSize={15}>Developed by BirdRa1n 👨🏻‍💻</Heading>\n              </Link>\n            </HStack>\n          </Box>\n\n        </Box>\n\n      )\n    }\n\n\n    if (data.warning == \"valid token\") {\n\n      return (\n        <Center w={'100%'} h={'100%'} safeAreaBottom>\n\n          <Box safeAreaTop w={'100%'} h={'100%'} maxW={580} justifyContent=\"space-between\">\n            <Head></Head>\n            <BodyOptions />\n          </Box>\n\n        </Center>\n      );\n\n    } else {\n      DataHome();\n      return (\n        <Center bg={'#581c87'} w={'100%'} h={'100%'} safeAreaBottom>\n          <HStack space={2} justifyContent=\"center\">\n            <Spinner accessibilityLabel=\"Loading posts\" color={'white'} />\n            <Heading color=\"white\" fontSize=\"md\">\n              Carregando\n            </Heading>\n          </HStack>\n        </Center>\n      )\n    }\n\n  }\n\n\n\n  return (\n    <NativeBaseProvider>\n      <CorpoBody></CorpoBody>\n    </NativeBaseProvider>\n  );\n\n};\n","import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nconst Stack = createNativeStackNavigator();\n\n//screens\nimport Login from './components/screens/Login';\nimport DashBorard from './components/screens/dashboard';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nexport default function App() {\n\n  const [loginStatus, setLoginState] = useState('Login');\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const value = await AsyncStorage.getItem('LoginSave')\n        if (value !== null) {\n          setLoginState(value)\n        }\n      } catch (e) {\n      }\n    }\n    getData();\n    \n  })\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName={loginStatus}>\n        <Stack.Screen name=\"Login\" component={Login} options={{ headerShown: false }} />\n        <Stack.Screen name=\"DashBorard\" component={DashBorard} options={{ headerShown: false, headerBackVisible: false}} />\n\n      </Stack.Navigator>\n    </NavigationContainer>)\n\n}\n\n"],"sourceRoot":""}