{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"onKeyPress\",\"onFocus\",\"onBlur\",\"disableFocusHandling\",\"inputProps\",\"wrapperRef\",\"InputLeftElement\",\"InputRightElement\",\"leftElement\",\"rightElement\",\"isHovered\",\"isFocused\"],_excluded2=[\"isFullWidth\",\"isDisabled\",\"isReadOnly\",\"ariaLabel\",\"accessibilityLabel\",\"placeholderTextColor\",\"selectionColor\",\"underlineColorAndroid\",\"type\",\"fontFamily\",\"fontWeight\",\"fontStyle\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import TextInput from\"react-native-web/dist/exports/TextInput\";import Platform from\"react-native-web/dist/exports/Platform\";import{useToken}from\"../../../hooks\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{useHover}from'@react-native-aria/interactions';import{mergeRefs}from\"../../../utils\";import{makeStyledComponent}from\"../../../utils/styled\";import{useResolvedFontFamily}from\"../../../hooks/useResolvedFontFamily\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var StyledInput=makeStyledComponent(TextInput);var InputBase=function InputBase(_ref2,ref){var _onKeyPress=_ref2.onKeyPress,_onFocus=_ref2.onFocus,_onBlur=_ref2.onBlur,disableFocusHandling=_ref2.disableFocusHandling,inputProps=_ref2.inputProps,wrapperRef=_ref2.wrapperRef,InputLeftElement=_ref2.InputLeftElement,InputRightElement=_ref2.InputRightElement,leftElement=_ref2.leftElement,rightElement=_ref2.rightElement,isHoveredProp=_ref2.isHovered,isFocusedProp=_ref2.isFocused,props=_objectWithoutProperties(_ref2,_excluded);var passUnresolvedProps;if(InputLeftElement||InputRightElement||leftElement||rightElement){passUnresolvedProps=true;}var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isFocused=_React$useState2[0],setIsFocused=_React$useState2[1];var handleFocus=function handleFocus(focusState,callback){!disableFocusHandling&&setIsFocused(focusState);callback();};var inputThemeProps={isDisabled:inputProps.disabled,isInvalid:inputProps.accessibilityInvalid,isReadOnly:inputProps.accessibilityReadOnly,isRequired:inputProps.required};var _ref=React.useRef(null);var _useHover=useHover({},_ref),isHovered=_useHover.isHovered;var _usePropsResolution=usePropsResolution('Input',_objectSpread(_objectSpread({},inputThemeProps),props),{isDisabled:inputThemeProps.isDisabled,isHovered:isHoveredProp||isHovered,isFocused:isFocusedProp||isFocused,isInvalid:inputThemeProps.isInvalid,isReadOnly:inputThemeProps.isReadOnly}),isFullWidth=_usePropsResolution.isFullWidth,isDisabled=_usePropsResolution.isDisabled,isReadOnly=_usePropsResolution.isReadOnly,ariaLabel=_usePropsResolution.ariaLabel,accessibilityLabel=_usePropsResolution.accessibilityLabel,placeholderTextColor=_usePropsResolution.placeholderTextColor,selectionColor=_usePropsResolution.selectionColor,underlineColorAndroid=_usePropsResolution.underlineColorAndroid,type=_usePropsResolution.type,fontFamily=_usePropsResolution.fontFamily,fontWeight=_usePropsResolution.fontWeight,fontStyle=_usePropsResolution.fontStyle,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var resolvedFontFamily=useResolvedFontFamily({fontFamily:fontFamily,fontWeight:fontWeight!==null&&fontWeight!==void 0?fontWeight:400,fontStyle:fontStyle!==null&&fontStyle!==void 0?fontStyle:'normal'});var resolvedPlaceholderTextColor=useToken('colors',placeholderTextColor);var resolvedSelectionColor=useToken('colors',selectionColor);var resolvedUnderlineColorAndroid=useToken('colors',underlineColorAndroid);if(useHasResponsiveProps(_objectSpread(_objectSpread({},props),{},{onKeyPress:_onKeyPress,onFocus:_onFocus,onBlur:_onBlur,disableFocusHandling:disableFocusHandling,inputProps:inputProps}))){return null;}return React.createElement(StyledInput,_extends({},inputProps,{secureTextEntry:type==='password',accessible:true,accessibilityLabel:ariaLabel||accessibilityLabel,editable:isDisabled||isReadOnly?false:true,w:isFullWidth?'100%':undefined},passUnresolvedProps?props:resolvedProps,resolvedFontFamily,{placeholderTextColor:resolvedPlaceholderTextColor,selectionColor:resolvedSelectionColor,underlineColorAndroid:resolvedUnderlineColorAndroid,onKeyPress:function onKeyPress(e){e.persist();_onKeyPress&&_onKeyPress(e);},onFocus:function onFocus(e){handleFocus(true,_onFocus?function(){return _onFocus(e);}:function(){});},onBlur:function onBlur(e){handleFocus(false,_onBlur?function(){return _onBlur(e);}:function(){});}},Platform.OS==='web'?{disabled:isDisabled,cursor:isDisabled?'not-allowed':'auto'}:{},{ref:mergeRefs([ref,_ref,wrapperRef]),style:Platform.OS==='web'?{outline:'none'}:{}}));};export default memo(forwardRef(InputBase));","map":{"version":3,"sources":["InputBase.tsx"],"names":["StyledInput","makeStyledComponent","InputBase","isHovered","isFocused","props","InputLeftElement","passUnresolvedProps","React","handleFocus","setIsFocused","callback","inputThemeProps","isDisabled","inputProps","isInvalid","isReadOnly","isRequired","required","_ref","useHover","resolvedProps","usePropsResolution","isHoveredProp","isFocusedProp","resolvedFontFamily","useResolvedFontFamily","fontFamily","fontWeight","fontStyle","resolvedPlaceholderTextColor","useToken","resolvedSelectionColor","resolvedUnderlineColorAndroid","useHasResponsiveProps","onKeyPress","onFocus","onBlur","disableFocusHandling","type","ariaLabel","isFullWidth","undefined","e","disabled","cursor","mergeRefs","outline","memo","forwardRef"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { TextInput, Platform } from 'react-native';\nimport type { IInputProps } from './types';\nimport { useToken } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useResolvedFontFamily } from '../../../hooks/useResolvedFontFamily';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledInput = makeStyledComponent(TextInput);\n\nconst InputBase = (\n  {\n    onKeyPress,\n    onFocus,\n    onBlur,\n    disableFocusHandling,\n    inputProps,\n    wrapperRef,\n    InputLeftElement,\n    InputRightElement,\n    leftElement,\n    rightElement,\n    isHovered: isHoveredProp,\n    isFocused: isFocusedProp,\n    ...props\n  }: IInputProps & {\n    disableFocusHandling?: boolean;\n    inputProps: any;\n  },\n  ref: any\n) => {\n  let passUnresolvedProps;\n  if (InputLeftElement || InputRightElement || leftElement || rightElement) {\n    passUnresolvedProps = true;\n  }\n\n  const [isFocused, setIsFocused] = React.useState(false);\n  const handleFocus = (focusState: boolean, callback: any) => {\n    !disableFocusHandling && setIsFocused(focusState);\n    callback();\n  };\n\n  const inputThemeProps = {\n    isDisabled: inputProps.disabled,\n    isInvalid: inputProps.accessibilityInvalid,\n    isReadOnly: inputProps.accessibilityReadOnly,\n    isRequired: inputProps.required,\n  };\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  const {\n    isFullWidth,\n    isDisabled,\n    isReadOnly,\n    ariaLabel,\n    accessibilityLabel,\n    placeholderTextColor,\n    selectionColor,\n    underlineColorAndroid,\n    type,\n    fontFamily,\n    fontWeight,\n    fontStyle,\n    ...resolvedProps\n  } = usePropsResolution(\n    'Input',\n    {\n      ...inputThemeProps,\n      ...props,\n    },\n    {\n      isDisabled: inputThemeProps.isDisabled,\n      isHovered: isHoveredProp || isHovered,\n      isFocused: isFocusedProp || isFocused,\n      isInvalid: inputThemeProps.isInvalid,\n      isReadOnly: inputThemeProps.isReadOnly,\n    }\n  );\n\n  const resolvedFontFamily = useResolvedFontFamily({\n    fontFamily,\n    fontWeight: fontWeight ?? 400,\n    fontStyle: fontStyle ?? 'normal',\n  });\n  const resolvedPlaceholderTextColor = useToken('colors', placeholderTextColor);\n  const resolvedSelectionColor = useToken('colors', selectionColor);\n  const resolvedUnderlineColorAndroid = useToken(\n    'colors',\n    underlineColorAndroid\n  );\n  //TODO: refactor for responsive prop\n  if (\n    useHasResponsiveProps({\n      ...props,\n      onKeyPress,\n      onFocus,\n      onBlur,\n      disableFocusHandling,\n      inputProps,\n    })\n  ) {\n    return null;\n  }\n\n  return (\n    <StyledInput\n      {...inputProps}\n      secureTextEntry={type === 'password'}\n      accessible\n      accessibilityLabel={ariaLabel || accessibilityLabel}\n      editable={isDisabled || isReadOnly ? false : true}\n      w={isFullWidth ? '100%' : undefined}\n      {...(passUnresolvedProps ? props : resolvedProps)}\n      {...resolvedFontFamily}\n      placeholderTextColor={resolvedPlaceholderTextColor}\n      selectionColor={resolvedSelectionColor}\n      underlineColorAndroid={resolvedUnderlineColorAndroid}\n      onKeyPress={(e: any) => {\n        e.persist();\n        onKeyPress && onKeyPress(e);\n      }}\n      onFocus={(e: any) => {\n        handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n      }}\n      onBlur={(e: any) => {\n        handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n      }}\n      // TODO: this can be moved to baseStyle using _web\n      {...(Platform.OS === 'web'\n        ? {\n            disabled: isDisabled,\n            cursor: isDisabled ? 'not-allowed' : 'auto',\n          }\n        : {})}\n      ref={mergeRefs([ref, _ref, wrapperRef])}\n      style={Platform.OS === 'web' ? { outline: 'none' } : {}}\n    />\n  );\n};\n\nexport default memo(forwardRef(InputBase));\n"]},"metadata":{},"sourceType":"module"}