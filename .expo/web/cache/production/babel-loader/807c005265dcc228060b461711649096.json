{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"_icon\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import{usePropsResolution}from\"../../../hooks\";import Box from\"../../primitives/Box\";import{default as IconButton}from\"../IconButton\";import{CloseIcon}from\"../../primitives/Icon/Icons\";import{PopoverContext}from\"./PopoverContext\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var PopoverCloseButton=function PopoverCloseButton(props,ref){var _React$useContext=React.useContext(PopoverContext),onClose=_React$useContext.onClose;var _usePropsResolution=usePropsResolution('PopoverCloseButton',props),_icon=_usePropsResolution._icon,resolvedPorps=_objectWithoutProperties(_usePropsResolution,_excluded);if(useHasResponsiveProps(props)){return null;}return React.createElement(Box,{position:\"absolute\",right:1,top:1,zIndex:1,ref:ref},React.createElement(IconButton,_extends({},resolvedPorps,{icon:React.createElement(CloseIcon,_icon),onPress:onClose})));};export default React.memo(React.forwardRef(PopoverCloseButton));","map":{"version":3,"sources":["PopoverCloseButton.tsx"],"names":["default","PopoverCloseButton","onClose","React","resolvedPorps","usePropsResolution","useHasResponsiveProps","ref"],"mappings":"oYAAA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,OAAA,kBAAA,sBACA,MAAA,CAAA,GAAA,4BACA,OAASA,OAAO,GAAhB,CAAA,UAAA,qBACA,OAAA,SAAA,mCACA,OAAA,cAAA,wBACA,OAAA,qBAAA,4CAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAA,KAAA,CAAA,GAAA,CAGtB,CACH,sBAAyBE,KAAK,CAALA,UAAAA,CAAzB,cAAyBA,CAAzB,CAAQD,OAAR,mBAAQA,OAAR,CACA,wBAAoCG,kBAAkB,CAAA,oBAAA,CAFnD,KAEmD,CAAtD,CAAM,KAAN,qBAAM,KAAN,CAAkBD,aAAlB,yDAKA,GAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CACD,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAK,QAAQ,CAAb,UAAA,CAAyB,KAAK,CAA9B,CAAA,CAAmC,GAAG,CAAtC,CAAA,CAA2C,MAAM,CAAjD,CAAA,CAAsD,GAAG,CAAEC,GAA3D,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,UAAA,CAAA,QAAA,CAAA,EAAA,CAAA,aAAA,CAAA,CAEE,IAAI,CAAE,KAAA,CAAA,aAAA,CAAA,SAAA,CAFR,KAEQ,CAFR,CAGE,OAAO,CAAEL,OAHX,CAAA,CAAA,CADF,CADF,CAbF,CAAA,CAwBA,cAAeC,CAAAA,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,kBAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport Box from '../../primitives/Box';\nimport { default as IconButton, IIconButtonProps } from '../IconButton';\nimport { CloseIcon } from '../../primitives/Icon/Icons';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverCloseButton = (\n  props: Omit<IIconButtonProps, 'icon'>,\n  ref: any\n) => {\n  const { onClose }: any = React.useContext(PopoverContext);\n  const { _icon, ...resolvedPorps } = usePropsResolution(\n    'PopoverCloseButton',\n    props\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box position=\"absolute\" right={1} top={1} zIndex={1} ref={ref}>\n      <IconButton\n        {...resolvedPorps}\n        icon={<CloseIcon {..._icon} />}\n        onPress={onClose}\n      />\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(PopoverCloseButton));\n"]},"metadata":{},"sourceType":"module"}