{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"wrapperRef\"],_excluded2=[\"totalLines\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import{Input}from\"../Input\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var TextArea=function TextArea(_ref,ref){var wrapperRef=_ref.wrapperRef,props=_objectWithoutProperties(_ref,_excluded);var _usePropsResolution=usePropsResolution('TextArea',props),totalLines=_usePropsResolution.totalLines,newProps=_objectWithoutProperties(_usePropsResolution,_excluded2);if(useHasResponsiveProps(props)){return null;}return React.createElement(Input,_extends({},newProps,{numberOfLines:totalLines,wrapperRef:wrapperRef,ref:ref}));};export default memo(forwardRef(TextArea));","map":{"version":3,"sources":["index.tsx"],"names":["TextArea","props","newProps","usePropsResolution","useHasResponsiveProps","ref","memo","forwardRef"],"mappings":"maAAA,MAAA,CAAA,KAAA,EAAA,IAAA,CAAA,UAAA,KAAA,OAAA,CACA,OAAA,KAAA,gBACA,OAAA,kBAAA,oCACA,OAAA,qBAAA,4CAQA,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAA,GAAA,CAAwD,IAAvD,CAAA,UAAuD,MAAvD,UAAuD,CAAtCC,KAAsC,0CACvE,wBAAoCE,kBAAkB,CAAA,UAAA,CADiB,KACjB,CAAtD,CAAM,UAAN,qBAAM,UAAN,CAAuBD,QAAvB,0DAEA,GAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CACD,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,CAAA,EAAA,CAAA,QAAA,CAAA,CAEE,aAAa,CAFf,UAAA,CAGE,UAAU,CAHZ,UAAA,CAIE,GAAG,CAAEC,GAJP,CAAA,CAAA,CADF,CANF,CAAA,CAgBA,cAAeC,CAAAA,IAAI,CAACC,UAAU,CAA9B,QAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Input, IInputProps } from '../Input';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nexport interface ITextAreaProps extends IInputProps {\n  /**\n   * Maps to react-native TextInput's numberOfLines.\n   */\n  totalLines?: number;\n}\n\nconst TextArea = ({ wrapperRef, ...props }: ITextAreaProps, ref: any) => {\n  const { totalLines, ...newProps } = usePropsResolution('TextArea', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Input\n      {...newProps}\n      numberOfLines={totalLines}\n      wrapperRef={wrapperRef}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(TextArea));\n"]},"metadata":{},"sourceType":"module"}