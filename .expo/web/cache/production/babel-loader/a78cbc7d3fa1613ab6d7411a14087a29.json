{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import*as React from'react';import{Text,Link,HStack,Center,Heading,Switch,useColorMode,NativeBaseProvider,extendTheme,VStack,Code,Box,FormControl,Input,Stack,WarningOutlineIcon,ZStack,Image,Button,Container,useToast}from\"native-base\";import axios from'axios';import arduino from\"../img/arduino.png\";import{useState}from'react';import{useEffect}from'react';import AsyncStorage from'@react-native-async-storage/async-storage';import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";export default function Login(_ref){var navigation=_ref.navigation;var toast=useToast();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var BoxForm=function BoxForm(){var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),username=_React$useState2[0],setUsername=_React$useState2[1];var _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),password=_React$useState4[0],setPassword=_React$useState4[1];var _React$useState5=React.useState(\"\"),_React$useState6=_slicedToArray(_React$useState5,2),statusLogin=_React$useState6[0],setstatusLogin=_React$useState6[1];var _React$useState7=React.useState(\"\"),_React$useState8=_slicedToArray(_React$useState7,2),token=_React$useState8[0],setToken=_React$useState8[1];var userError='';var pwsError='';function Login(){axios.get('https://apiarduinowebcontrol.herokuapp.com/',{params:{req:'login',username:username,password:password}}).then(function(response){console.log(response.data);setstatusLogin(response.data);});}if(statusLogin.warning_error==\"User does not exist\"){var userError=true;}else{var userError=false;}if(statusLogin.warning_error==\"Incorrect password\"){var pwsError=true;}else{var pwsError=false;}var getData=function getData(){var value;return _regeneratorRuntime.async(function getData$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));case 3:value=_context.sent;if(value!==null){setToken(value);}_context.next=9;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);case 9:case\"end\":return _context.stop();}}},null,null,[[0,7]],Promise);};getData();if(statusLogin.loginState==\"Login done\"){var gettoken=statusLogin.token;var gg=AsyncStorage.setItem('token',gettoken);var lgg=AsyncStorage.setItem('LoginSave','DashBorard');navigation.navigate('DashBorard');}return React.createElement(Box,{alignItems:\"center\",w:'xs',bg:'light.50',borderRadius:10,shadow:5},React.createElement(Box,{w:\"90%\",maxWidth:\"300px\"},React.createElement(Center,null,React.createElement(Image,{source:arduino,alt:\"Inicial Logo\",size:\"200\"}),React.createElement(Heading,{top:1,fontSize:22},\"ArduinoHomeControl\")),React.createElement(FormControl,{marginTop:5,isInvalid:userError},React.createElement(Stack,{mx:\"4\"},React.createElement(FormControl.Label,null,\"Usu\\xE1rio \"),React.createElement(Input,{borderBottomColor:'light.200',variant:\"underlined\",type:\"user\",placeholder:\"\",onChangeText:function onChangeText(value){return setUsername(value);}}),React.createElement(FormControl.HelperText,null),React.createElement(FormControl.ErrorMessage,{leftIcon:React.createElement(WarningOutlineIcon,{size:\"xs\"})},\"Usu\\xE1rio n\\xE3o existe\"))),React.createElement(FormControl,{marginBottom:5,isInvalid:pwsError},React.createElement(Stack,{mx:\"4\"},React.createElement(FormControl.Label,null,\"Senha\"),React.createElement(Input,{borderBottomColor:'light.200',type:\"password\",variant:\"underlined\",placeholder:\"*******\",onChangeText:setPassword}),React.createElement(FormControl.HelperText,null),React.createElement(FormControl.ErrorMessage,{leftIcon:React.createElement(WarningOutlineIcon,{size:\"xs\"})},\"Senha incorreta\"))),React.createElement(Box,{alignItems:\"center\",marginBottom:5},React.createElement(Button,{bg:'indigo.800',w:'50%',variant:\"solid\",colorScheme:'indigo',borderRadius:20,onPress:function onPress(){return Login();}},React.createElement(Text,{color:'light.50'},\"Entrar\")))));};return React.createElement(NativeBaseProvider,null,React.createElement(Center,{_dark:{bg:\"blueGray.900\"},_light:{bg:\"violet.900\"},px:4,flex:1},React.createElement(BoxForm,null),React.createElement(TouchableOpacity,{onPress:function onPress(){return navigation.navigate('SingUp');}},React.createElement(Heading,{top:4,_web:{marginTop:4},size:'xs',color:'#f5f3ff'},\"N\\xE3o possui conta? \",React.createElement(Heading,{color:'white',size:'xs'},\"Clique aqui\")))));}","map":{"version":3,"sources":["/Users/dariojr/Documents/GitHub/ArduinoHomeControl/components/screens/Login.js"],"names":["React","Text","Link","HStack","Center","Heading","Switch","useColorMode","NativeBaseProvider","extendTheme","VStack","Code","Box","FormControl","Input","Stack","WarningOutlineIcon","ZStack","Image","Button","Container","useToast","axios","arduino","useState","useEffect","AsyncStorage","Login","navigation","toast","data","setData","BoxForm","username","setUsername","password","setPassword","statusLogin","setstatusLogin","token","setToken","userError","pwsError","get","params","req","then","response","console","log","warning_error","getData","getItem","value","loginState","gettoken","gg","setItem","lgg","navigate","bg","marginTop"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n    Text,\n    Link,\n    HStack,\n    Center,\n    Heading,\n    Switch,\n    useColorMode,\n    NativeBaseProvider,\n    extendTheme,\n    VStack,\n    Code,\n    Box,\n    FormControl,\n    Input,\n    Stack,\n    WarningOutlineIcon,\n    ZStack,\n    Image,\n    Button,\n    Container,\n    useToast\n} from \"native-base\";\nimport axios from 'axios';\nimport arduino from '../img/arduino.png';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { TouchableOpacity } from \"react-native\";\n\n\nexport default function Login({ navigation }) {\n    const toast = useToast();\n    const [data, setData] = useState('');\n\n    const BoxForm = () => {\n        const [username, setUsername] = React.useState(\"\");\n        const [password, setPassword] = React.useState(\"\");\n        const [statusLogin, setstatusLogin] = React.useState(\"\");\n\n        const [token, setToken] = React.useState(\"\");\n        var userError = ''\n        var pwsError = ''\n\n        \n\n        function Login() {\n            axios.get('https://apiarduinowebcontrol.herokuapp.com/', {\n                params: {\n                    req: 'login',\n                    username: username,\n                    password: password\n                }\n            })\n                .then(function (response) {\n                    // manipula o sucesso da requisição\n                    console.log(response.data);\n                    setstatusLogin(response.data)\n                })\n        }\n\n\n\n\n        if (statusLogin.warning_error == \"User does not exist\") {\n            var userError = true;\n        } else {\n            var userError = false;\n        }\n        if (statusLogin.warning_error == \"Incorrect password\") {\n            var pwsError = true;\n        } else {\n            var pwsError = false;\n        }\n        const getData = async () => {\n            try {\n                const value = await AsyncStorage.getItem('token')\n\n                if (value !== null) {\n                    setToken(value)\n\n                }\n            } catch (e) {\n            }\n        }\n        getData()\n\n\n        if (statusLogin.loginState == \"Login done\") {\n            var gettoken = statusLogin.token;\n            var gg = AsyncStorage.setItem('token', gettoken)\n            var lgg = AsyncStorage.setItem('LoginSave', 'DashBorard')\n            navigation.navigate('DashBorard')\n\n\n\n        }\n\n\n\n\n\n\n\n        return <Box alignItems=\"center\" w={'xs'} bg={'light.50'} borderRadius={10} shadow={5}>\n            <Box w=\"90%\" maxWidth=\"300px\">\n                <Center>\n                    <Image source={arduino} alt=\"Inicial Logo\" size=\"200\" />\n                    <Heading top={1} fontSize={22}>ArduinoHomeControl</Heading>\n\n                </Center>\n\n                <FormControl marginTop={5} isInvalid={userError}>\n                    <Stack mx=\"4\" >\n                        <FormControl.Label >Usuário </FormControl.Label>\n                        <Input borderBottomColor={'light.200'} variant=\"underlined\" type=\"user\" placeholder=\"\"\n                            onChangeText={(value) => setUsername(value)}\n                        ></Input>\n                        <FormControl.HelperText>\n\n                        </FormControl.HelperText>\n                        <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                            Usuário não existe\n                        </FormControl.ErrorMessage>\n                    </Stack>\n                </FormControl>\n                <FormControl marginBottom={5} isInvalid={pwsError}>\n                    <Stack mx=\"4\" >\n                        <FormControl.Label >Senha</FormControl.Label>\n                        <Input borderBottomColor={'light.200'} type=\"password\" variant=\"underlined\" placeholder=\"*******\"\n                            onChangeText={setPassword} />\n\n                        <FormControl.HelperText>\n\n                        </FormControl.HelperText>\n                        <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                            Senha incorreta\n                        </FormControl.ErrorMessage>\n                    </Stack>\n                </FormControl>\n\n                <Box alignItems=\"center\" marginBottom={5}>\n                    <Button bg={'indigo.800'} w={'50%'} variant={\"solid\"} colorScheme={'indigo'} borderRadius={20} onPress={() => Login()}>\n                        <Text color={'light.50'}>Entrar</Text>\n                    </Button>\n                </Box>\n\n            </Box>\n        </Box>;\n\n    };\n    return (\n        <NativeBaseProvider>\n            <Center _dark={{ bg: \"blueGray.900\" }} _light={{ bg: \"violet.900\" }} px={4} flex={1}>\n                <BoxForm></BoxForm>\n                <TouchableOpacity onPress={() => navigation.navigate('SingUp')}>\n                    <Heading top={4} _web={{ marginTop: 4 }} size={'xs'} color={'#f5f3ff'}>Não possui conta? <Heading color={'white'} size={'xs'}>Clique aqui</Heading></Heading>\n                </TouchableOpacity>\n            </Center>\n        </NativeBaseProvider>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}