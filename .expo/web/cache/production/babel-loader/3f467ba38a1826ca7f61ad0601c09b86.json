{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import*as React from'react';import{NavigationContainer}from'@react-navigation/native';import{createNativeStackNavigator}from'@react-navigation/native-stack';import{useState}from'react';import{useEffect}from'react';import AsyncStorage from'@react-native-async-storage/async-storage';var Stack=createNativeStackNavigator();import Login from\"./components/screens/Login\";import DashBorard from\"./components/screens/dashboard\";import SingUp from\"./components/screens/SingUp\";import Acct from\"./components/screens/Acct\";export default function App(){var _useState=useState('Login'),_useState2=_slicedToArray(_useState,2),loginStatus=_useState2[0],setLoginState=_useState2[1];useEffect(function(){var getData=function getData(){var value;return _regeneratorRuntime.async(function getData$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(AsyncStorage.getItem('LoginSave'));case 3:value=_context.sent;if(value!==null){setLoginState(value);}_context.next=9;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);case 9:case\"end\":return _context.stop();}}},null,null,[[0,7]],Promise);};getData();});function CheckState(){return React.createElement(NavigationContainer,null,React.createElement(Stack.Navigator,{initialRouteName:loginStatus},React.createElement(Stack.Screen,{name:\"Login\",component:Login,options:{headerShown:false}}),React.createElement(Stack.Screen,{name:\"DashBorard\",component:DashBorard,options:{headerShown:false,headerBackVisible:false}}),React.createElement(Stack.Screen,{name:\"SingUp\",component:SingUp,options:{headerShown:false,headerBackVisible:false}}),React.createElement(Stack.Screen,{name:\"Acct\",component:Acct,options:{headerShown:true,headerBackVisible:true,headerBackTitle:'Voltar',headerTitle:\"Conta\"}})));}return React.createElement(CheckState,null);}","map":{"version":3,"sources":["/Users/dariojr/Documents/GitHub/ArduinoHomeControl/App.js"],"names":["React","NavigationContainer","createNativeStackNavigator","useState","useEffect","AsyncStorage","Stack","Login","DashBorard","SingUp","Acct","App","loginStatus","setLoginState","getData","getItem","value","CheckState","headerShown","headerBackVisible","headerBackTitle","headerTitle"],"mappings":"6HAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OAASC,0BAAT,KAA2C,gCAA3C,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,MAAOC,CAAAA,YAAP,KAAyB,2CAAzB,CACA,GAAMC,CAAAA,KAAK,CAAGJ,0BAA0B,EAAxC,CAGA,MAAOK,CAAAA,KAAP,kCACA,MAAOC,CAAAA,UAAP,sCACA,MAAOC,CAAAA,MAAP,mCACA,MAAOC,CAAAA,IAAP,iCAGA,cAAe,SAASC,CAAAA,GAAT,EAAe,CAE5B,cAAqCR,QAAQ,CAAC,OAAD,CAA7C,wCAAOS,WAAP,eAAoBC,aAApB,eACAT,SAAS,CAAC,UAAM,CACd,GAAMU,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,+LAEQT,YAAY,CAACU,OAAb,CAAqB,WAArB,CAFR,SAENC,KAFM,eAGZ,GAAIA,KAAK,GAAK,IAAd,CAAoB,CAClBH,aAAa,CAACG,KAAD,CAAb,CACD,CALW,sJAAhB,CASAF,OAAO,GAGR,CAbQ,CAAT,CAeA,QAASG,CAAAA,UAAT,EAAqB,CACnB,MACE,qBAAC,mBAAD,MACE,oBAAC,KAAD,CAAO,SAAP,EAAiB,gBAAgB,CAAEL,WAAnC,EACE,oBAAC,KAAD,CAAO,MAAP,EAAc,IAAI,CAAC,OAAnB,CAA2B,SAAS,CAAEL,KAAtC,CAA6C,OAAO,CAAE,CAAEW,WAAW,CAAE,KAAf,CAAtD,EADF,CAEE,oBAAC,KAAD,CAAO,MAAP,EAAc,IAAI,CAAC,YAAnB,CAAgC,SAAS,CAAEV,UAA3C,CAAuD,OAAO,CAAE,CAAEU,WAAW,CAAE,KAAf,CAAsBC,iBAAiB,CAAE,KAAzC,CAAhE,EAFF,CAGE,oBAAC,KAAD,CAAO,MAAP,EAAc,IAAI,CAAC,QAAnB,CAA4B,SAAS,CAAEV,MAAvC,CAA+C,OAAO,CAAE,CAAES,WAAW,CAAE,KAAf,CAAsBC,iBAAiB,CAAE,KAAzC,CAAxD,EAHF,CAIE,oBAAC,KAAD,CAAO,MAAP,EAAc,IAAI,CAAC,MAAnB,CAA0B,SAAS,CAAET,IAArC,CAA2C,OAAO,CAAE,CAAEQ,WAAW,CAAE,IAAf,CAAqBC,iBAAiB,CAAE,IAAxC,CAA8CC,eAAe,CAAE,QAA/D,CAAyEC,WAAW,CAAE,OAAtF,CAApD,EAJF,CADF,CADF,CAWD,CACD,MACE,qBAAC,UAAD,MADF,CAKD","sourcesContent":["import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nconst Stack = createNativeStackNavigator();\n\n//screens\nimport Login from './components/screens/Login';\nimport DashBorard from './components/screens/dashboard';\nimport SingUp from './components/screens/SingUp';\nimport Acct from './components/screens/Acct';\n\n\nexport default function App() {\n\n  const [loginStatus, setLoginState] = useState('Login');\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const value = await AsyncStorage.getItem('LoginSave')\n        if (value !== null) {\n          setLoginState(value)\n        }\n      } catch (e) {\n      }\n    }\n    getData();\n\n\n  })\n  \n  function CheckState(){\n    return (\n      <NavigationContainer>\n        <Stack.Navigator initialRouteName={loginStatus}>\n          <Stack.Screen name=\"Login\" component={Login} options={{ headerShown: false }} />\n          <Stack.Screen name=\"DashBorard\" component={DashBorard} options={{ headerShown: false, headerBackVisible: false }} />\n          <Stack.Screen name=\"SingUp\" component={SingUp} options={{ headerShown: false, headerBackVisible: false }} />\n          <Stack.Screen name=\"Acct\" component={Acct} options={{ headerShown: true, headerBackVisible: true, headerBackTitle: 'Voltar', headerTitle: \"Conta\" }} />\n  \n  \n        </Stack.Navigator>\n      </NavigationContainer>)\n  }\n  return(\n    <CheckState></CheckState>\n  )\n\n\n}\n\n"]},"metadata":{},"sourceType":"module"}