{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React from\"react\";import{useEffect,useState}from\"react\";import{NativeBaseProvider,Collapse,IconButton,CloseIcon,Alert,Stack,WarningOutlineIcon,Image,Modal,Actionsheet,Spinner,useClipboard,Box,Text,Badge,Divider,Heading,VStack,Switch,FormControl,Input,Link,Button,Icon,HStack,Center,Pressable,View,Container,ZStack,ScrollView,Toast}from\"native-base\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Platform from\"react-native-web/dist/exports/Platform\";import AsyncStorage from'@react-native-async-storage/async-storage';import axios from\"axios\";export default function Acct(_ref){var navigation=_ref.navigation;var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),data=_React$useState2[0],setData=_React$useState2[1];var _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),token=_React$useState4[0],setToken=_React$useState4[1];var getData=function getData(){var value;return _regeneratorRuntime.async(function getData$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(AsyncStorage.getItem('data_user'));case 3:value=_context.sent;if(value!==null){setData(value);}_context.next=9;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);case 9:case\"end\":return _context.stop();}}},null,null,[[0,7]],Promise);};getData();var getToken=function getToken(){var value;return _regeneratorRuntime.async(function getToken$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));case 3:value=_context2.sent;if(value!==null){setToken(value);}_context2.next=9;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);case 9:case\"end\":return _context2.stop();}}},null,null,[[0,7]],Promise);};getToken();if(data!=null){var dd=JSON.parse(data);function BoxForm(){var _React$useState5=React.useState(\"\"),_React$useState6=_slicedToArray(_React$useState5,2),username=_React$useState6[0],setUsername=_React$useState6[1];var _React$useState7=React.useState(\"\"),_React$useState8=_slicedToArray(_React$useState7,2),password=_React$useState8[0],setPassword=_React$useState8[1];var _React$useState9=React.useState(\"\"),_React$useState10=_slicedToArray(_React$useState9,2),statusLogin=_React$useState10[0],setstatusLogin=_React$useState10[1];return React.createElement(Box,{alignItems:\"center\",w:'xs',bg:'light.50',borderRadius:5,shadow:5},React.createElement(Box,{w:\"90%\",maxWidth:\"300px\"},React.createElement(FormControl,{marginTop:5},React.createElement(Stack,{mx:\"1\"},React.createElement(FormControl.Label,null,\"Nome \"),React.createElement(Input,{borderBottomColor:'light.200',variant:\"underlined\",type:\"user\",placeholder:\"\",onChangeText:function onChangeText(value){return setUsername(value);},defaultValue:dd.name}),React.createElement(FormControl.HelperText,null),React.createElement(FormControl.ErrorMessage,{leftIcon:React.createElement(WarningOutlineIcon,{size:\"xs\"})},\"Usu\\xE1rio n\\xE3o existe\"))),React.createElement(FormControl,{marginTop:5},React.createElement(Stack,{mx:\"1\"},React.createElement(FormControl.Label,null,\"Usu\\xE1rio \"),React.createElement(Input,{borderBottomColor:'light.200',variant:\"underlined\",type:\"user\",placeholder:\"\",onChangeText:function onChangeText(value){return setUsername(value);},defaultValue:dd.username}),React.createElement(FormControl.HelperText,null),React.createElement(FormControl.ErrorMessage,{leftIcon:React.createElement(WarningOutlineIcon,{size:\"xs\"})},\"Usu\\xE1rio n\\xE3o existe\"))),React.createElement(FormControl,{marginTop:5},React.createElement(Stack,{mx:\"1\"},React.createElement(FormControl.Label,null,\"E-mail \"),React.createElement(Input,{borderBottomColor:'light.200',variant:\"underlined\",type:\"user\",placeholder:\"\",onChangeText:function onChangeText(value){return setUsername(value);},defaultValue:dd.email}),React.createElement(FormControl.HelperText,null),React.createElement(FormControl.ErrorMessage,{leftIcon:React.createElement(WarningOutlineIcon,{size:\"xs\"})},\"Usu\\xE1rio n\\xE3o existe\"))),React.createElement(FormControl,{marginBottom:5},React.createElement(Stack,{mx:\"1\"},React.createElement(FormControl.Label,null,\"Senha\"),React.createElement(Input,{borderBottomColor:'light.200',type:\"password\",variant:\"underlined\",placeholder:\"*******\",onChangeText:setPassword}),React.createElement(FormControl.HelperText,null),React.createElement(FormControl.ErrorMessage,{leftIcon:React.createElement(WarningOutlineIcon,{size:\"xs\"})},\"Senha incorreta\"))),React.createElement(Box,{alignItems:\"center\",marginBottom:5},React.createElement(Button,{bg:'indigo.900',w:'50%',variant:\"solid\",colorScheme:'indigo',borderRadius:20,onPress:function onPress(){return alert('Essa função não está disponível na versão pública');}},React.createElement(Text,{color:'light.50'},\"Alterar dados\")))));}function BoxDATA(){var _React$useState11=React.useState(\"\"),_React$useState12=_slicedToArray(_React$useState11,2),copyText=_React$useState12[0],setCopyText=_React$useState12[1];var _useClipboard=useClipboard(),value=_useClipboard.value,onCopy=_useClipboard.onCopy;function NewToken(){axios.get('https://apiarduinowebcontrol.herokuapp.com/',{params:{req:'Update_DataUser',token:token,command:'NewToken'}}).then(function(response){var token=response.data.NewToken;var gg=AsyncStorage.setItem('token',token);console.log(response.data);getToken();alert(\"Novo token foi gerado!\\nVerifique sua caixa de e-mail\");});}function NewArduinoID(){axios.get('https://apiarduinowebcontrol.herokuapp.com/',{params:{req:'Update_DataUser',token:token,command:'NewArduinoID'}}).then(function(response){alert(\"Novo ArduinoID foi gerado!\\n\"+response.data.NewArduinoID);navigation.navigate('DashBorard');});}return React.createElement(Box,{maxW:'100%',h:100,bg:\"light.50\",borderRadius:5},React.createElement(VStack,{left:1.5,space:1},React.createElement(Heading,null,dd.name),React.createElement(Heading,{fontSize:15,color:'violet.600'},\"Arduino ID: \",dd.arduinoid),React.createElement(HStack,{space:1},React.createElement(Button,{onPress:function onPress(){return NewArduinoID();},bg:'indigo.800',variant:\"solid\",colorScheme:'indigo'},\"Alterar ArduinoID\"),React.createElement(Button,{onPress:function onPress(){return NewToken();},bg:'indigo.800',variant:\"solid\",colorScheme:'indigo'},\"Alterar Token\"))));}return React.createElement(NativeBaseProvider,null,React.createElement(View,{h:'100%',_dark:{bg:\"blueGray.900\"},_light:{bg:\"violet.900\"},px:4,flex:1},React.createElement(Center,{marginTop:10,_web:{marginTop:51,top:-50}},React.createElement(VStack,{space:5},React.createElement(BoxDATA,null),React.createElement(BoxForm,null)))));}else{return React.createElement(NativeBaseProvider,null);}}","map":{"version":3,"sources":["/Users/dariojr/Documents/GitHub/ArduinoHomeControl/components/screens/Acct.js"],"names":["React","useEffect","useState","NativeBaseProvider","Collapse","IconButton","CloseIcon","Alert","Stack","WarningOutlineIcon","Image","Modal","Actionsheet","Spinner","useClipboard","Box","Text","Badge","Divider","Heading","VStack","Switch","FormControl","Input","Link","Button","Icon","HStack","Center","Pressable","View","Container","ZStack","ScrollView","Toast","AsyncStorage","axios","Acct","navigation","data","setData","token","setToken","getData","getItem","value","getToken","dd","JSON","parse","BoxForm","username","setUsername","password","setPassword","statusLogin","setstatusLogin","name","email","alert","BoxDATA","copyText","setCopyText","onCopy","NewToken","get","params","req","command","then","response","gg","setItem","console","log","NewArduinoID","navigate","arduinoid","bg","marginTop","top"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\"\nimport { NativeBaseProvider, Collapse, IconButton, CloseIcon, Alert, Stack, WarningOutlineIcon, Image, Modal, Actionsheet, Spinner, useClipboard, Box, Text, Badge, Divider, Heading, VStack, Switch, FormControl, Input, Link, Button, Icon, HStack, Center, Pressable, View, Container, ZStack, ScrollView, Toast } from \"native-base\";\nimport { TouchableOpacity, Platform } from \"react-native\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from \"axios\";\nexport default function Acct({ navigation }) {\n    const [data, setData] = React.useState(null);\n\n    const [token, setToken] = React.useState(\"\");\n    const getData = async () => {\n        try {\n            const value = await AsyncStorage.getItem('data_user')\n            if (value !== null) {\n                setData(value)\n            }\n        } catch (e) {\n        }\n    }\n    getData()\n    const getToken = async () => {\n        try {\n            const value = await AsyncStorage.getItem('token')\n            if (value !== null) {\n                setToken(value)\n            }\n        } catch (e) {\n        }\n    }\n    getToken()\n\n\n\n    if (data != null) {\n        var dd = JSON.parse(data)\n\n\n\n\n\n        function BoxForm() {\n            const [username, setUsername] = React.useState(\"\");\n            const [password, setPassword] = React.useState(\"\");\n            const [statusLogin, setstatusLogin] = React.useState(\"\");\n\n            return (\n                <Box alignItems=\"center\" w={'xs'} bg={'light.50'} borderRadius={5} shadow={5}>\n                    <Box w=\"90%\" maxWidth=\"300px\">\n\n\n                        <FormControl marginTop={5} >\n                            <Stack mx=\"1\" >\n                                <FormControl.Label >Nome </FormControl.Label>\n                                <Input borderBottomColor={'light.200'} variant=\"underlined\" type=\"user\" placeholder=\"\"\n                                    onChangeText={(value) => setUsername(value)} defaultValue={dd.name}\n                                ></Input>\n                                <FormControl.HelperText>\n\n                                </FormControl.HelperText>\n                                <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                                    Usuário não existe\n                                </FormControl.ErrorMessage>\n                            </Stack>\n                        </FormControl>\n                        <FormControl marginTop={5} >\n                            <Stack mx=\"1\" >\n                                <FormControl.Label >Usuário </FormControl.Label>\n                                <Input borderBottomColor={'light.200'} variant=\"underlined\" type=\"user\" placeholder=\"\"\n                                    onChangeText={(value) => setUsername(value)} defaultValue={dd.username}\n                                ></Input>\n                                <FormControl.HelperText>\n\n                                </FormControl.HelperText>\n                                <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                                    Usuário não existe\n                                </FormControl.ErrorMessage>\n                            </Stack>\n                        </FormControl>\n                        <FormControl marginTop={5} >\n                            <Stack mx=\"1\" >\n                                <FormControl.Label >E-mail </FormControl.Label>\n                                <Input borderBottomColor={'light.200'} variant=\"underlined\" type=\"user\" placeholder=\"\"\n                                    onChangeText={(value) => setUsername(value)} defaultValue={dd.email}\n                                ></Input>\n                                <FormControl.HelperText>\n\n                                </FormControl.HelperText>\n                                <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                                    Usuário não existe\n                                </FormControl.ErrorMessage>\n                            </Stack>\n                        </FormControl>\n                        <FormControl marginBottom={5} >\n                            <Stack mx=\"1\" >\n                                <FormControl.Label >Senha</FormControl.Label>\n                                <Input borderBottomColor={'light.200'} type=\"password\" variant=\"underlined\" placeholder=\"*******\"\n                                    onChangeText={setPassword} />\n\n                                <FormControl.HelperText>\n\n                                </FormControl.HelperText>\n                                <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                                    Senha incorreta\n                                </FormControl.ErrorMessage>\n                            </Stack>\n                        </FormControl>\n\n                        <Box alignItems=\"center\" marginBottom={5}>\n                            <Button bg={'indigo.900'} w={'50%'} variant={\"solid\"} colorScheme={'indigo'} borderRadius={20} onPress={() => alert('Essa função não está disponível na versão pública')}>\n                                <Text color={'light.50'}>Alterar dados</Text>\n                            </Button>\n                        </Box>\n\n                    </Box>\n                </Box>\n            );\n        }\n\n        function BoxDATA() {\n            const [copyText, setCopyText] = React.useState(\"\");\n            const { value, onCopy } = useClipboard();\n\n\n            function NewToken() {\n                axios.get('https://apiarduinowebcontrol.herokuapp.com/', {\n                    params: {\n                        req: 'Update_DataUser',\n                        token: token,\n                        command: 'NewToken',\n                    }\n                })\n                    .then(function (response) {\n                        var token = response.data.NewToken;\n                        var gg = AsyncStorage.setItem('token', token);\n                        console.log(response.data);\n                        getToken()\n                        alert(\"Novo token foi gerado!\\nVerifique sua caixa de e-mail\")\n                    })\n\n            }\n\n            function NewArduinoID() {\n                axios.get('https://apiarduinowebcontrol.herokuapp.com/', {\n                    params: {\n                        req: 'Update_DataUser',\n                        token: token,\n                        command: 'NewArduinoID',\n                    }\n                })\n                    .then(function (response) {\n                        alert(\"Novo ArduinoID foi gerado!\\n\"+response.data.NewArduinoID)\n                        navigation.navigate('DashBorard')\n                    })\n\n            }\n            return (\n                <Box maxW={'100%'} h={100} bg=\"light.50\" borderRadius={5} >\n                    <VStack left={1.5} space={1}>\n                        <Heading >{dd.name}</Heading>\n                        <Heading fontSize={15} color={'violet.600'}>Arduino ID: {dd.arduinoid}</Heading>\n\n                        <HStack space={1}>\n                            <Button onPress={()=> NewArduinoID()} bg={'indigo.800'} variant={\"solid\"} colorScheme={'indigo'}>Alterar ArduinoID</Button>\n                            <Button onPress={() => NewToken()} bg={'indigo.800'} variant={\"solid\"} colorScheme={'indigo'}>Alterar Token</Button>\n                        </HStack>\n                    </VStack>\n\n                </Box>\n            )\n        }\n\n\n\n\n\n\n\n        return (\n            <NativeBaseProvider>\n                                    <View h={'100%'} _dark={{ bg: \"blueGray.900\" }} _light={{ bg: \"violet.900\" }} px={4} flex={1}>\n\n                <Center marginTop={10} _web={{marginTop: 51, top: -50}}>\n                    <VStack space={5}>\n                        <BoxDATA></BoxDATA>\n                        <BoxForm></BoxForm>\n                    </VStack>\n                </Center>\n                </View>\n\n            </NativeBaseProvider>\n        )\n    } else {\n        return (\n            <NativeBaseProvider>\n            </NativeBaseProvider>\n        )\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}