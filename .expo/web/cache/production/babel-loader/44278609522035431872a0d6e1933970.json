{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\"],_excluded2=[\"_text\",\"source\",\"style\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import{Box,Image,Text}from\"../../primitives\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var Avatar=function Avatar(_ref,ref){var children=_ref.children,props=_objectWithoutProperties(_ref,_excluded);var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),error=_React$useState2[0],setError=_React$useState2[1];var _usePropsResolution=usePropsResolution('Avatar',props),_text=_usePropsResolution._text,source=_usePropsResolution.source,style=_usePropsResolution.style,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var Badge=React.createElement(React.Fragment,null);var remainingChildren=[];React.Children.map(children,function(child,key){if(typeof(child===null||child===void 0?void 0:child.type)==='object'&&(child===null||child===void 0?void 0:child.type.displayName)==='AvatarBadge'){Badge=child;}else{remainingChildren.push(typeof child==='string'||typeof child==='number'?React.createElement(Text,_extends({key:'avatar-children-'+key},_text),child):child);}});var imageFitStyle={height:'100%',width:'100%'};if(useHasResponsiveProps(props)){return null;}return React.createElement(Box,resolvedProps,source&&!error?React.createElement(Image,{borderRadius:resolvedProps.borderRadius,source:source,alt:'--',_alt:_text,style:[style,imageFitStyle],onError:function onError(){setError(true);},ref:ref}):remainingChildren.length!==0&&remainingChildren,Badge);};export default memo(forwardRef(Avatar));","map":{"version":3,"sources":["Avatar.tsx"],"names":["Avatar","props","React","resolvedProps","usePropsResolution","Badge","remainingChildren","child","key","imageFitStyle","height","width","useHasResponsiveProps","setError","ref","memo","forwardRef"],"mappings":"8eAAA,MAAA,CAAA,KAAA,EAAA,IAAA,CAAA,UAAA,KAAA,OAAA,CACA,OAAA,GAAA,CAAA,KAAA,CAAA,IAAA,wBACA,OAAA,kBAAA,oCAEA,OAAA,qBAAA,4CAEA,GAAMA,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAA,GAAA,CAAoD,IAAnD,CAAA,QAAmD,MAAnD,QAAmD,CAApCC,KAAoC,0CACjE,oBAA0BC,KAAK,CAALA,QAAAA,CAA1B,KAA0BA,CAA1B,oDAAM,KAAN,qBAAM,QAAN,qBACA,wBAAmDE,kBAAkB,CAAA,QAAA,CAArE,KAAqE,CAArE,CAAM,KAAN,qBAAM,KAAN,CAAM,MAAN,qBAAM,MAAN,CAAM,KAAN,qBAAM,KAAN,CAAiCD,aAAjC,0DAKA,GAAIE,CAAAA,KAAK,CAAG,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,CAAZ,IAAY,CAAZ,CACA,GAAMC,CAAAA,iBAAgC,CAR2B,EAQjE,CAEAJ,KAAK,CAALA,QAAAA,CAAAA,GAAAA,CAAAA,QAAAA,CAA6B,SAAA,KAAA,CAAA,GAAA,CAAgB,CAC3C,GACE,OAAOK,KAAP,GAAA,IAAOA,EAAAA,KAAP,GAAA,IAAA,EAAOA,CAAP,IAAA,EAAOA,CAAAA,KAAK,CAAZ,IAAA,IAAA,QAAA,EACA,CAAA,KAAK,GAAL,IAAA,EAAA,KAAK,GAAA,IAAL,EAAA,CAAA,IAAA,EAAA,CAAA,KAAK,CAAL,IAAA,CAAA,WAAA,IAFF,aAAA,CAGE,CACAF,KAAK,CAALA,KAAAA,CAJF,CAAA,IAKO,CACLC,iBAAiB,CAAjBA,IAAAA,CACE,MAAA,CAAA,KAAA,GAAA,QAAA,EAA6B,MAAA,CAAA,KAAA,GAA7B,QAAA,CACE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAM,GAAG,CAAE,mBAAqBE,GAAhC,CAAA,CAAA,KAAA,CAAA,CADF,KACE,CADF,CADFF,KAAAA,EASD,CAhBHJ,CAAAA,EAmBA,GAAMO,CAAAA,aAAkB,CAAG,CAAEC,MAAM,CAAR,MAAA,CAAkBC,KAAK,CAAE,MAAzB,CAA3B,CAEA,GAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CACD,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,GAAA,CAAA,aAAA,CACG,MAAM,EAAI,CAAV,KAAA,CACC,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CACE,YAAY,CAAET,aAAa,CAD7B,YAAA,CAEE,MAAM,CAFR,MAAA,CAGE,GAAG,CAHL,IAAA,CAIE,IAAI,CAJN,KAAA,CAKE,KAAK,CAAE,CAAA,KAAA,CALT,aAKS,CALT,CAME,OAAO,CAAE,kBAAM,CACbU,QAAQ,CAARA,IAAQ,CAARA,CAPJ,CAAA,CASE,GAAG,CAAEC,GATP,CAAA,CADD,CAaCR,iBAAiB,CAAjBA,MAAAA,GAAAA,CAAAA,EAdJ,iBAAA,CADF,KACE,CADF,CAlCF,CAAA,CAwDA,cAAeS,CAAAA,IAAI,CAACC,UAAU,CAA9B,MAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Box, Image, Text } from '../../primitives';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IAvatarProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Avatar = ({ children, ...props }: IAvatarProps, ref: any) => {\n  const [error, setError] = React.useState(false);\n  const { _text, source, style, ...resolvedProps } = usePropsResolution(\n    'Avatar',\n    props\n  );\n\n  let Badge = <></>;\n  const remainingChildren: JSX.Element[] = [];\n  //  Pop Badge from children\n  React.Children.map(children, (child, key) => {\n    if (\n      typeof child?.type === 'object' &&\n      child?.type.displayName === 'AvatarBadge'\n    ) {\n      Badge = child;\n    } else {\n      remainingChildren.push(\n        typeof child === 'string' || typeof child === 'number' ? (\n          <Text key={'avatar-children-' + key} {..._text}>\n            {child}\n          </Text>\n        ) : (\n          child\n        )\n      );\n    }\n  });\n\n  const imageFitStyle: any = { height: '100%', width: '100%' };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box {...resolvedProps}>\n      {source && !error ? (\n        <Image\n          borderRadius={resolvedProps.borderRadius}\n          source={source}\n          alt={'--'}\n          _alt={_text}\n          style={[style, imageFitStyle]}\n          onError={() => {\n            setError(true);\n          }}\n          ref={ref}\n        />\n      ) : (\n        remainingChildren.length !== 0 && remainingChildren\n      )}\n      {Badge}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Avatar));\n"]},"metadata":{},"sourceType":"module"}