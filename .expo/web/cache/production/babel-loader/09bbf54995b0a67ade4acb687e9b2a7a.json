{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef,memo}from'react';import Box from\"../../primitives/Box\";import{useThemeProps}from\"../../../hooks/useThemeProps\";import PresenceTransition from\"./PresenceTransition\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import{Overlay}from\"../../primitives/Overlay\";var holderStyle={top:{top:0,right:0,left:0},right:{right:0,top:0,bottom:0},bottom:{bottom:0,right:0,left:0},left:{left:0,bottom:0,top:0}};export var Slide=memo(forwardRef(function(_ref,ref){var children=_ref.children,props=_objectWithoutProperties(_ref,_excluded);var _useThemeProps=useThemeProps('Slide',props),visible=_useThemeProps.in,placement=_useThemeProps.placement,overlay=_useThemeProps.overlay,duration=_useThemeProps.duration;var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),containerOpacity=_React$useState2[0],setContainerOpacity=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),size=_React$useState4[0],setSize=_React$useState4[1];var provideSize=function provideSize(layoutSize){if(placement==='right'||placement==='left')setSize(layoutSize.width);else setSize(layoutSize.height);setContainerOpacity(1);};var transition={duration:duration};var animationStyle={top:{initial:{translateY:-size},animate:{translateY:0,transition:transition}},bottom:{initial:{translateY:size},animate:{translateY:0,transition:transition},exit:{translateY:size,transition:transition}},left:{initial:{translateX:-size},animate:{translateX:0,transition:transition}},right:{initial:{translateX:size},animate:{translateX:0,transition:transition}}};if(useHasResponsiveProps(props)){return null;}var slideComponent=React.createElement(PresenceTransition,_extends({visible:visible},animationStyle[placement],{style:[{position:'absolute'},holderStyle[placement],{height:'100%'}]}),React.createElement(Box,_extends({},props,{h:\"100%\",opacity:containerOpacity,pointerEvents:\"box-none\",ref:ref,onLayout:function onLayout(e){return provideSize(e.nativeEvent.layout);}}),children));if(overlay){return React.createElement(React.Fragment,null,React.createElement(Overlay,{isOpen:true,style:{overflow:'hidden'}},slideComponent));}else{return slideComponent;}}));export default Slide;","map":{"version":3,"sources":["Slide.tsx"],"names":["holderStyle","top","right","left","bottom","Slide","memo","forwardRef","props","in","duration","useThemeProps","React","provideSize","layoutSize","placement","setSize","setContainerOpacity","transition","animationStyle","initial","translateY","size","animate","exit","translateX","useHasResponsiveProps","slideComponent","visible","position","height","e","overflow"],"mappings":"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","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport Box from '../../primitives/Box';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport type { ISlideProps } from './types';\nimport PresenceTransition from './PresenceTransition';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { Overlay } from '../../primitives/Overlay';\n\nconst holderStyle: any = {\n  top: {\n    top: 0,\n    right: 0,\n    left: 0,\n  },\n  right: {\n    right: 0,\n    top: 0,\n    bottom: 0,\n  },\n  bottom: {\n    bottom: 0,\n    right: 0,\n    left: 0,\n  },\n  left: {\n    left: 0,\n    bottom: 0,\n    top: 0,\n  },\n};\n\nexport const Slide = memo(\n  forwardRef(({ children, ...props }: ISlideProps, ref: any) => {\n    const { in: visible, placement, overlay, duration } = useThemeProps(\n      'Slide',\n      props\n    );\n    const [containerOpacity, setContainerOpacity] = React.useState(0);\n    const [size, setSize] = React.useState(0);\n    const provideSize = (layoutSize: any) => {\n      if (placement === 'right' || placement === 'left')\n        setSize(layoutSize.width);\n      else setSize(layoutSize.height);\n      setContainerOpacity(1);\n    };\n\n    const transition = { duration };\n\n    const animationStyle: any = {\n      top: {\n        initial: {\n          translateY: -size,\n        },\n        animate: {\n          translateY: 0,\n          transition,\n        },\n      },\n      bottom: {\n        initial: {\n          translateY: size,\n        },\n        animate: {\n          translateY: 0,\n          transition,\n        },\n        exit: {\n          translateY: size,\n          transition,\n        },\n      },\n      left: {\n        initial: {\n          translateX: -size,\n        },\n        animate: {\n          translateX: 0,\n          transition,\n        },\n      },\n      right: {\n        initial: {\n          translateX: size,\n        },\n        animate: {\n          translateX: 0,\n          transition,\n        },\n      },\n    };\n\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n\n    const slideComponent = (\n      <PresenceTransition\n        visible={visible}\n        {...animationStyle[placement]}\n        style={[\n          { position: 'absolute' },\n          holderStyle[placement],\n          { height: '100%' },\n        ]}\n      >\n        <Box\n          {...props}\n          h=\"100%\"\n          opacity={containerOpacity}\n          pointerEvents=\"box-none\"\n          ref={ref}\n          onLayout={(e) => provideSize(e.nativeEvent.layout)}\n        >\n          {children}\n        </Box>\n      </PresenceTransition>\n    );\n\n    if (overlay) {\n      return (\n        <>\n          <Overlay isOpen={true} style={{ overflow: 'hidden' }}>\n            {slideComponent}\n          </Overlay>\n        </>\n      );\n    } else {\n      return slideComponent;\n    }\n  })\n);\n\nexport default Slide;\n"]},"metadata":{},"sourceType":"module"}