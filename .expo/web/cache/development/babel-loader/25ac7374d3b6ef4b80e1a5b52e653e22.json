{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/dariojr/Documents/GitHub/ArduinoHomeControl/components/screens/Acct.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { NativeBaseProvider, Collapse, IconButton, CloseIcon, Alert, Stack, WarningOutlineIcon, Image, Modal, Actionsheet, Spinner, useClipboard, Box, Text, Badge, Divider, Heading, VStack, Switch, FormControl, Input, Link, Button, Icon, HStack, Center, Pressable, View, Container, ZStack, ScrollView, Toast } from \"native-base\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from \"axios\";\nexport default function Acct(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      token = _React$useState4[0],\n      setToken = _React$useState4[1];\n\n  var getData = function getData() {\n    var value;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('data_user'));\n\n          case 3:\n            value = _context.sent;\n\n            if (value !== null) {\n              setData(value);\n            }\n\n            _context.next = 9;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  getData();\n\n  var getToken = function getToken() {\n    var value;\n    return _regeneratorRuntime.async(function getToken$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 3:\n            value = _context2.sent;\n\n            if (value !== null) {\n              setToken(value);\n            }\n\n            _context2.next = 9;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  getToken();\n\n  if (data != null) {\n    var dd = JSON.parse(data);\n\n    function BoxForm() {\n      var _React$useState5 = React.useState(\"\"),\n          _React$useState6 = _slicedToArray(_React$useState5, 2),\n          username = _React$useState6[0],\n          setUsername = _React$useState6[1];\n\n      var _React$useState7 = React.useState(\"\"),\n          _React$useState8 = _slicedToArray(_React$useState7, 2),\n          password = _React$useState8[0],\n          setPassword = _React$useState8[1];\n\n      var _React$useState9 = React.useState(\"\"),\n          _React$useState10 = _slicedToArray(_React$useState9, 2),\n          statusLogin = _React$useState10[0],\n          setstatusLogin = _React$useState10[1];\n\n      return React.createElement(Box, {\n        alignItems: \"center\",\n        w: 'xs',\n        bg: 'light.50',\n        borderRadius: 5,\n        shadow: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, React.createElement(Box, {\n        w: \"90%\",\n        maxWidth: \"300px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, React.createElement(FormControl, {\n        marginTop: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }, React.createElement(Stack, {\n        mx: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }\n      }, React.createElement(FormControl.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }\n      }, \"Nome \"), React.createElement(Input, {\n        borderBottomColor: 'light.200',\n        variant: \"underlined\",\n        type: \"user\",\n        placeholder: \"\",\n        onChangeText: function onChangeText(value) {\n          return setUsername(value);\n        },\n        defaultValue: dd.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }\n      }), React.createElement(FormControl.HelperText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }\n      }), React.createElement(FormControl.ErrorMessage, {\n        leftIcon: React.createElement(WarningOutlineIcon, {\n          size: \"xs\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 69\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }\n      }, \"Usu\\xE1rio n\\xE3o existe\"))), React.createElement(FormControl, {\n        marginTop: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, React.createElement(Stack, {\n        mx: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }\n      }, React.createElement(FormControl.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 33\n        }\n      }, \"Usu\\xE1rio \"), React.createElement(Input, {\n        borderBottomColor: 'light.200',\n        variant: \"underlined\",\n        type: \"user\",\n        placeholder: \"\",\n        onChangeText: function onChangeText(value) {\n          return setUsername(value);\n        },\n        defaultValue: dd.username,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }\n      }), React.createElement(FormControl.HelperText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }), React.createElement(FormControl.ErrorMessage, {\n        leftIcon: React.createElement(WarningOutlineIcon, {\n          size: \"xs\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 69\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }\n      }, \"Usu\\xE1rio n\\xE3o existe\"))), React.createElement(FormControl, {\n        marginTop: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }, React.createElement(Stack, {\n        mx: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }, React.createElement(FormControl.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 33\n        }\n      }, \"E-mail \"), React.createElement(Input, {\n        borderBottomColor: 'light.200',\n        variant: \"underlined\",\n        type: \"user\",\n        placeholder: \"\",\n        onChangeText: function onChangeText(value) {\n          return setUsername(value);\n        },\n        defaultValue: dd.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }\n      }), React.createElement(FormControl.HelperText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }\n      }), React.createElement(FormControl.ErrorMessage, {\n        leftIcon: React.createElement(WarningOutlineIcon, {\n          size: \"xs\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 69\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }\n      }, \"Usu\\xE1rio n\\xE3o existe\"))), React.createElement(FormControl, {\n        marginBottom: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }\n      }, React.createElement(Stack, {\n        mx: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }\n      }, React.createElement(FormControl.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }\n      }, \"Senha\"), React.createElement(Input, {\n        borderBottomColor: 'light.200',\n        type: \"password\",\n        variant: \"underlined\",\n        placeholder: \"*******\",\n        onChangeText: setPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 33\n        }\n      }), React.createElement(FormControl.HelperText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }\n      }), React.createElement(FormControl.ErrorMessage, {\n        leftIcon: React.createElement(WarningOutlineIcon, {\n          size: \"xs\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 69\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 33\n        }\n      }, \"Senha incorreta\"))), React.createElement(Box, {\n        alignItems: \"center\",\n        marginBottom: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }, React.createElement(Button, {\n        bg: 'indigo.900',\n        w: '50%',\n        variant: \"solid\",\n        colorScheme: 'indigo',\n        borderRadius: 20,\n        onPress: function onPress() {\n          return alert('Essa função não está disponível na versão pública');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        color: 'light.50',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }\n      }, \"Alterar dados\")))));\n    }\n\n    function BoxDATA() {\n      var _React$useState11 = React.useState(\"\"),\n          _React$useState12 = _slicedToArray(_React$useState11, 2),\n          copyText = _React$useState12[0],\n          setCopyText = _React$useState12[1];\n\n      var _useClipboard = useClipboard(),\n          value = _useClipboard.value,\n          onCopy = _useClipboard.onCopy;\n\n      function NewToken() {\n        axios.get('https://apiarduinowebcontrol.herokuapp.com/', {\n          params: {\n            req: 'Update_DataUser',\n            token: token,\n            command: 'NewToken'\n          }\n        }).then(function (response) {\n          var token = response.data.NewToken;\n          var gg = AsyncStorage.setItem('token', token);\n          console.log(response.data);\n          getToken();\n          alert(\"Novo token foi gerado!\\nVerifique sua caixa de e-mail\");\n        });\n      }\n\n      function NewArduinoID() {\n        axios.get('https://apiarduinowebcontrol.herokuapp.com/', {\n          params: {\n            req: 'Update_DataUser',\n            token: token,\n            command: 'NewArduinoID'\n          }\n        }).then(function (response) {\n          alert(\"Novo ArduinoID foi gerado!\\n\" + response.data.NewArduinoID);\n          navigation.navigate('DashBorard');\n        });\n      }\n\n      return React.createElement(Box, {\n        maxW: '100%',\n        h: 100,\n        bg: \"light.50\",\n        borderRadius: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }\n      }, React.createElement(VStack, {\n        left: 1.5,\n        space: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }\n      }, React.createElement(Heading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }\n      }, dd.name), React.createElement(Heading, {\n        fontSize: 15,\n        color: 'violet.600',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }\n      }, \"Arduino ID: \", dd.arduinoid), React.createElement(HStack, {\n        space: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }\n      }, React.createElement(Button, {\n        onPress: function onPress() {\n          return NewArduinoID();\n        },\n        bg: 'indigo.800',\n        variant: \"solid\",\n        colorScheme: 'indigo',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }\n      }, \"Alterar ArduinoID\"), React.createElement(Button, {\n        onPress: function onPress() {\n          return NewToken();\n        },\n        bg: 'indigo.800',\n        variant: \"solid\",\n        colorScheme: 'indigo',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }\n      }, \"Alterar Token\"))));\n    }\n\n    return React.createElement(NativeBaseProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      h: '100%',\n      _dark: {\n        bg: \"blueGray.900\"\n      },\n      _light: {\n        bg: \"violet.900\"\n      },\n      px: 4,\n      flex: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 37\n      }\n    }, React.createElement(Center, {\n      marginTop: 10,\n      _web: {\n        marginTop: 51,\n        top: -50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, React.createElement(VStack, {\n      space: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, React.createElement(BoxDATA, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }), React.createElement(BoxForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    })))));\n  } else {\n    return React.createElement(NativeBaseProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/Users/dariojr/Documents/GitHub/ArduinoHomeControl/components/screens/Acct.js"],"names":["React","useEffect","useState","NativeBaseProvider","Collapse","IconButton","CloseIcon","Alert","Stack","WarningOutlineIcon","Image","Modal","Actionsheet","Spinner","useClipboard","Box","Text","Badge","Divider","Heading","VStack","Switch","FormControl","Input","Link","Button","Icon","HStack","Center","Pressable","View","Container","ZStack","ScrollView","Toast","AsyncStorage","axios","Acct","navigation","data","setData","token","setToken","getData","getItem","value","getToken","dd","JSON","parse","BoxForm","username","setUsername","password","setPassword","statusLogin","setstatusLogin","name","email","alert","BoxDATA","copyText","setCopyText","onCopy","NewToken","get","params","req","command","then","response","gg","setItem","console","log","NewArduinoID","navigate","arduinoid","bg","marginTop","top"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\"\nimport { NativeBaseProvider, Collapse, IconButton, CloseIcon, Alert, Stack, WarningOutlineIcon, Image, Modal, Actionsheet, Spinner, useClipboard, Box, Text, Badge, Divider, Heading, VStack, Switch, FormControl, Input, Link, Button, Icon, HStack, Center, Pressable, View, Container, ZStack, ScrollView, Toast } from \"native-base\";\nimport { TouchableOpacity, Platform } from \"react-native\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from \"axios\";\nexport default function Acct({ navigation }) {\n    const [data, setData] = React.useState(null);\n\n    const [token, setToken] = React.useState(\"\");\n    const getData = async () => {\n        try {\n            const value = await AsyncStorage.getItem('data_user')\n            if (value !== null) {\n                setData(value)\n            }\n        } catch (e) {\n        }\n    }\n    getData()\n    const getToken = async () => {\n        try {\n            const value = await AsyncStorage.getItem('token')\n            if (value !== null) {\n                setToken(value)\n            }\n        } catch (e) {\n        }\n    }\n    getToken()\n\n\n\n    if (data != null) {\n        var dd = JSON.parse(data)\n\n\n\n\n\n        function BoxForm() {\n            const [username, setUsername] = React.useState(\"\");\n            const [password, setPassword] = React.useState(\"\");\n            const [statusLogin, setstatusLogin] = React.useState(\"\");\n\n            return (\n                <Box alignItems=\"center\" w={'xs'} bg={'light.50'} borderRadius={5} shadow={5}>\n                    <Box w=\"90%\" maxWidth=\"300px\">\n\n\n                        <FormControl marginTop={5} >\n                            <Stack mx=\"1\" >\n                                <FormControl.Label >Nome </FormControl.Label>\n                                <Input borderBottomColor={'light.200'} variant=\"underlined\" type=\"user\" placeholder=\"\"\n                                    onChangeText={(value) => setUsername(value)} defaultValue={dd.name}\n                                ></Input>\n                                <FormControl.HelperText>\n\n                                </FormControl.HelperText>\n                                <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                                    Usuário não existe\n                                </FormControl.ErrorMessage>\n                            </Stack>\n                        </FormControl>\n                        <FormControl marginTop={5} >\n                            <Stack mx=\"1\" >\n                                <FormControl.Label >Usuário </FormControl.Label>\n                                <Input borderBottomColor={'light.200'} variant=\"underlined\" type=\"user\" placeholder=\"\"\n                                    onChangeText={(value) => setUsername(value)} defaultValue={dd.username}\n                                ></Input>\n                                <FormControl.HelperText>\n\n                                </FormControl.HelperText>\n                                <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                                    Usuário não existe\n                                </FormControl.ErrorMessage>\n                            </Stack>\n                        </FormControl>\n                        <FormControl marginTop={5} >\n                            <Stack mx=\"1\" >\n                                <FormControl.Label >E-mail </FormControl.Label>\n                                <Input borderBottomColor={'light.200'} variant=\"underlined\" type=\"user\" placeholder=\"\"\n                                    onChangeText={(value) => setUsername(value)} defaultValue={dd.email}\n                                ></Input>\n                                <FormControl.HelperText>\n\n                                </FormControl.HelperText>\n                                <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                                    Usuário não existe\n                                </FormControl.ErrorMessage>\n                            </Stack>\n                        </FormControl>\n                        <FormControl marginBottom={5} >\n                            <Stack mx=\"1\" >\n                                <FormControl.Label >Senha</FormControl.Label>\n                                <Input borderBottomColor={'light.200'} type=\"password\" variant=\"underlined\" placeholder=\"*******\"\n                                    onChangeText={setPassword} />\n\n                                <FormControl.HelperText>\n\n                                </FormControl.HelperText>\n                                <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                                    Senha incorreta\n                                </FormControl.ErrorMessage>\n                            </Stack>\n                        </FormControl>\n\n                        <Box alignItems=\"center\" marginBottom={5}>\n                            <Button bg={'indigo.900'} w={'50%'} variant={\"solid\"} colorScheme={'indigo'} borderRadius={20} onPress={() => alert('Essa função não está disponível na versão pública')}>\n                                <Text color={'light.50'}>Alterar dados</Text>\n                            </Button>\n                        </Box>\n\n                    </Box>\n                </Box>\n            );\n        }\n\n        function BoxDATA() {\n            const [copyText, setCopyText] = React.useState(\"\");\n            const { value, onCopy } = useClipboard();\n\n\n            function NewToken() {\n                axios.get('https://apiarduinowebcontrol.herokuapp.com/', {\n                    params: {\n                        req: 'Update_DataUser',\n                        token: token,\n                        command: 'NewToken',\n                    }\n                })\n                    .then(function (response) {\n                        var token = response.data.NewToken;\n                        var gg = AsyncStorage.setItem('token', token);\n                        console.log(response.data);\n                        getToken()\n                        alert(\"Novo token foi gerado!\\nVerifique sua caixa de e-mail\")\n                    })\n\n            }\n\n            function NewArduinoID() {\n                axios.get('https://apiarduinowebcontrol.herokuapp.com/', {\n                    params: {\n                        req: 'Update_DataUser',\n                        token: token,\n                        command: 'NewArduinoID',\n                    }\n                })\n                    .then(function (response) {\n                        alert(\"Novo ArduinoID foi gerado!\\n\"+response.data.NewArduinoID)\n                        navigation.navigate('DashBorard')\n                    })\n\n            }\n            return (\n                <Box maxW={'100%'} h={100} bg=\"light.50\" borderRadius={5} >\n                    <VStack left={1.5} space={1}>\n                        <Heading >{dd.name}</Heading>\n                        <Heading fontSize={15} color={'violet.600'}>Arduino ID: {dd.arduinoid}</Heading>\n\n                        <HStack space={1}>\n                            <Button onPress={()=> NewArduinoID()} bg={'indigo.800'} variant={\"solid\"} colorScheme={'indigo'}>Alterar ArduinoID</Button>\n                            <Button onPress={() => NewToken()} bg={'indigo.800'} variant={\"solid\"} colorScheme={'indigo'}>Alterar Token</Button>\n                        </HStack>\n                    </VStack>\n\n                </Box>\n            )\n        }\n\n\n\n\n\n\n\n        return (\n            <NativeBaseProvider>\n                                    <View h={'100%'} _dark={{ bg: \"blueGray.900\" }} _light={{ bg: \"violet.900\" }} px={4} flex={1}>\n\n                <Center marginTop={10} _web={{marginTop: 51, top: -50}}>\n                    <VStack space={5}>\n                        <BoxDATA></BoxDATA>\n                        <BoxForm></BoxForm>\n                    </VStack>\n                </Center>\n                </View>\n\n            </NativeBaseProvider>\n        )\n    } else {\n        return (\n            <NativeBaseProvider>\n            </NativeBaseProvider>\n        )\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}