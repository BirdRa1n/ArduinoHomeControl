{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/dariojr/Documents/GitHub/ArduinoHomeControl/components/screens/Login.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport { Text, Link, HStack, Center, Heading, Switch, useColorMode, NativeBaseProvider, extendTheme, VStack, Code, Box, FormControl, Input, Stack, WarningOutlineIcon, ZStack, Image, Button, Container, useToast } from \"native-base\";\nimport axios from 'axios';\nimport arduino from \"../img/arduino.png\";\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nexport default function Login(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  var toast = useToast();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var BoxForm = function BoxForm() {\n    var _React$useState = React.useState(\"\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        username = _React$useState2[0],\n        setUsername = _React$useState2[1];\n\n    var _React$useState3 = React.useState(\"\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        password = _React$useState4[0],\n        setPassword = _React$useState4[1];\n\n    var _React$useState5 = React.useState(\"\"),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        statusLogin = _React$useState6[0],\n        setstatusLogin = _React$useState6[1];\n\n    var _React$useState7 = React.useState(\"\"),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        token = _React$useState8[0],\n        setToken = _React$useState8[1];\n\n    var userError = '';\n    var pwsError = '';\n\n    function Login() {\n      axios.get('https://apiarduinowebcontrol.herokuapp.com/', {\n        params: {\n          req: 'login',\n          username: username,\n          password: password\n        }\n      }).then(function (response) {\n        console.log(response.data);\n        setstatusLogin(response.data);\n      });\n    }\n\n    if (statusLogin.warning_error == \"User does not exist\") {\n      var userError = true;\n    } else {\n      var userError = false;\n    }\n\n    if (statusLogin.warning_error == \"Incorrect password\") {\n      var pwsError = true;\n    } else {\n      var pwsError = false;\n    }\n\n    var getData = function getData() {\n      var value;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n            case 3:\n              value = _context.sent;\n\n              if (value !== null) {\n                setToken(value);\n              }\n\n              _context.next = 9;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    getData();\n\n    if (statusLogin.loginState == \"Login done\") {\n      var gettoken = statusLogin.token;\n      var gg = AsyncStorage.setItem('token', gettoken);\n      var lgg = AsyncStorage.setItem('LoginSave', 'DashBorard');\n      navigation.navigate('DashBorard');\n    }\n\n    return React.createElement(Box, {\n      alignItems: \"center\",\n      w: 'xs',\n      bg: 'light.50',\n      borderRadius: 10,\n      shadow: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 16\n      }\n    }, React.createElement(Box, {\n      w: \"90%\",\n      maxWidth: \"300px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, React.createElement(Center, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: arduino,\n      alt: \"Inicial Logo\",\n      size: \"200\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }), React.createElement(Heading, {\n      top: 1,\n      fontSize: 22,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, \"ArduinoHomeControl\")), React.createElement(FormControl, {\n      marginTop: 5,\n      isInvalid: userError,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, React.createElement(Stack, {\n      mx: \"4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, React.createElement(FormControl.Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, \"Usu\\xE1rio \"), React.createElement(Input, {\n      borderBottomColor: 'light.200',\n      variant: \"underlined\",\n      type: \"user\",\n      placeholder: \"\",\n      onChangeText: function onChangeText(value) {\n        return setUsername(value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }), React.createElement(FormControl.HelperText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }), React.createElement(FormControl.ErrorMessage, {\n      leftIcon: React.createElement(WarningOutlineIcon, {\n        size: \"xs\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 61\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, \"Usu\\xE1rio n\\xE3o existe\"))), React.createElement(FormControl, {\n      marginBottom: 5,\n      isInvalid: pwsError,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, React.createElement(Stack, {\n      mx: \"4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, React.createElement(FormControl.Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, \"Senha\"), React.createElement(Input, {\n      borderBottomColor: 'light.200',\n      type: \"password\",\n      variant: \"underlined\",\n      placeholder: \"*******\",\n      onChangeText: setPassword,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }), React.createElement(FormControl.HelperText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }), React.createElement(FormControl.ErrorMessage, {\n      leftIcon: React.createElement(WarningOutlineIcon, {\n        size: \"xs\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 61\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, \"Senha incorreta\"))), React.createElement(Box, {\n      alignItems: \"center\",\n      marginBottom: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, React.createElement(Button, {\n      bg: 'indigo.800',\n      w: '50%',\n      variant: \"solid\",\n      colorScheme: 'indigo',\n      borderRadius: 20,\n      onPress: function onPress() {\n        return Login();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      color: 'light.50',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, \"Entrar\")))));\n  };\n\n  return React.createElement(NativeBaseProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, React.createElement(Center, {\n    _dark: {\n      bg: \"blueGray.900\"\n    },\n    _light: {\n      bg: \"violet.900\"\n    },\n    px: 4,\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, React.createElement(BoxForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('SingUp');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, React.createElement(Heading, {\n    top: 4,\n    _web: {\n      marginTop: 4\n    },\n    size: 'xs',\n    color: '#f5f3ff',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, \"N\\xE3o possui conta? \", React.createElement(Heading, {\n    color: 'white',\n    size: 'xs',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 110\n    }\n  }, \"Clique aqui\")))));\n}","map":{"version":3,"sources":["/Users/dariojr/Documents/GitHub/ArduinoHomeControl/components/screens/Login.js"],"names":["React","Text","Link","HStack","Center","Heading","Switch","useColorMode","NativeBaseProvider","extendTheme","VStack","Code","Box","FormControl","Input","Stack","WarningOutlineIcon","ZStack","Image","Button","Container","useToast","axios","arduino","useState","useEffect","AsyncStorage","Login","navigation","toast","data","setData","BoxForm","username","setUsername","password","setPassword","statusLogin","setstatusLogin","token","setToken","userError","pwsError","get","params","req","then","response","console","log","warning_error","getData","getItem","value","loginState","gettoken","gg","setItem","lgg","navigate","bg","marginTop"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n    Text,\n    Link,\n    HStack,\n    Center,\n    Heading,\n    Switch,\n    useColorMode,\n    NativeBaseProvider,\n    extendTheme,\n    VStack,\n    Code,\n    Box,\n    FormControl,\n    Input,\n    Stack,\n    WarningOutlineIcon,\n    ZStack,\n    Image,\n    Button,\n    Container,\n    useToast\n} from \"native-base\";\nimport axios from 'axios';\nimport arduino from '../img/arduino.png';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { TouchableOpacity } from \"react-native\";\n\n\nexport default function Login({ navigation }) {\n    const toast = useToast();\n    const [data, setData] = useState('');\n\n    const BoxForm = () => {\n        const [username, setUsername] = React.useState(\"\");\n        const [password, setPassword] = React.useState(\"\");\n        const [statusLogin, setstatusLogin] = React.useState(\"\");\n\n        const [token, setToken] = React.useState(\"\");\n        var userError = ''\n        var pwsError = ''\n\n\n        function Login() {\n            axios.get('https://apiarduinowebcontrol.herokuapp.com/', {\n                params: {\n                    req: 'login',\n                    username: username,\n                    password: password\n                }\n            })\n                .then(function (response) {\n                    // manipula o sucesso da requisição\n                    console.log(response.data);\n                    setstatusLogin(response.data)\n                })\n        }\n\n\n\n\n        if (statusLogin.warning_error == \"User does not exist\") {\n            var userError = true;\n        } else {\n            var userError = false;\n        }\n        if (statusLogin.warning_error == \"Incorrect password\") {\n            var pwsError = true;\n        } else {\n            var pwsError = false;\n        }\n        const getData = async () => {\n            try {\n                const value = await AsyncStorage.getItem('token')\n\n                if (value !== null) {\n                    setToken(value)\n\n                }\n            } catch (e) {\n            }\n        }\n        getData()\n\n\n        if (statusLogin.loginState == \"Login done\") {\n            var gettoken = statusLogin.token;\n            var gg = AsyncStorage.setItem('token', gettoken)\n            var lgg = AsyncStorage.setItem('LoginSave', 'DashBorard')\n            navigation.navigate('DashBorard')\n\n\n\n        }\n\n\n\n\n\n\n\n        return <Box alignItems=\"center\" w={'xs'} bg={'light.50'} borderRadius={10} shadow={5}>\n            <Box w=\"90%\" maxWidth=\"300px\">\n                <Center>\n                    <Image source={arduino} alt=\"Inicial Logo\" size=\"200\" />\n                    <Heading top={1} fontSize={22}>ArduinoHomeControl</Heading>\n\n                </Center>\n\n                <FormControl marginTop={5} isInvalid={userError}>\n                    <Stack mx=\"4\" >\n                        <FormControl.Label >Usuário </FormControl.Label>\n                        <Input borderBottomColor={'light.200'} variant=\"underlined\" type=\"user\" placeholder=\"\"\n                            onChangeText={(value) => setUsername(value)}\n                        ></Input>\n                        <FormControl.HelperText>\n\n                        </FormControl.HelperText>\n                        <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                            Usuário não existe\n                        </FormControl.ErrorMessage>\n                    </Stack>\n                </FormControl>\n                <FormControl marginBottom={5} isInvalid={pwsError}>\n                    <Stack mx=\"4\" >\n                        <FormControl.Label >Senha</FormControl.Label>\n                        <Input borderBottomColor={'light.200'} type=\"password\" variant=\"underlined\" placeholder=\"*******\"\n                            onChangeText={setPassword} />\n\n                        <FormControl.HelperText>\n\n                        </FormControl.HelperText>\n                        <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                            Senha incorreta\n                        </FormControl.ErrorMessage>\n                    </Stack>\n                </FormControl>\n\n                <Box alignItems=\"center\" marginBottom={5}>\n                    <Button bg={'indigo.800'} w={'50%'} variant={\"solid\"} colorScheme={'indigo'} borderRadius={20} onPress={() => Login()}>\n                        <Text color={'light.50'}>Entrar</Text>\n                    </Button>\n                </Box>\n\n            </Box>\n        </Box>;\n\n    };\n    return (\n        <NativeBaseProvider>\n            <Center _dark={{ bg: \"blueGray.900\" }} _light={{ bg: \"violet.900\" }} px={4} flex={1}>\n                <BoxForm></BoxForm>\n                <TouchableOpacity onPress={() => navigation.navigate('SingUp')}>\n                    <Heading top={4} _web={{ marginTop: 4 }} size={'xs'} color={'#f5f3ff'}>Não possui conta? <Heading color={'white'} size={'xs'}>Clique aqui</Heading></Heading>\n                </TouchableOpacity>\n            </Center>\n        </NativeBaseProvider>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}