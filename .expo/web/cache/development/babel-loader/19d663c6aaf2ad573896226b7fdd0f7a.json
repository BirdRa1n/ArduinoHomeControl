{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/dariojr/Documents/GitHub/ArduinoHomeControl/components/screens/SingUp.js\";\nimport { NativeBaseProvider, Collapse, IconButton, CloseIcon, Alert, Stack, WarningOutlineIcon, Image, Modal, Actionsheet, Spinner, useClipboard, Box, Text, Badge, Divider, Heading, VStack, Switch, FormControl, Input, Link, Button, Icon, HStack, Center, Pressable, View, Container, ZStack, ScrollView, Toast } from \"native-base\";\nimport React from \"react\";\nimport axios from 'axios';\nimport arduino from \"../img/arduino.png\";\nimport { useState } from 'react';\nexport default function SingUp(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      show = _React$useState2[0],\n      setShow = _React$useState2[1];\n\n  function BoxForm() {\n    var _React$useState3 = React.useState(\"\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        username = _React$useState4[0],\n        setUsername = _React$useState4[1];\n\n    var _React$useState5 = React.useState(\"\"),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        password = _React$useState6[0],\n        setPassword = _React$useState6[1];\n\n    var _React$useState7 = React.useState(\"\"),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        password_confirm = _React$useState8[0],\n        setPassword_confirm = _React$useState8[1];\n\n    var _React$useState9 = React.useState(\"\"),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        email = _React$useState10[0],\n        setEmail = _React$useState10[1];\n\n    var _React$useState11 = React.useState(\"\"),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        name = _React$useState12[0],\n        setName = _React$useState12[1];\n\n    var _React$useState13 = React.useState(\"\"),\n        _React$useState14 = _slicedToArray(_React$useState13, 2),\n        message = _React$useState14[0],\n        setMessage = _React$useState14[1];\n\n    var _React$useState15 = React.useState(false),\n        _React$useState16 = _slicedToArray(_React$useState15, 2),\n        dangerform = _React$useState16[0],\n        setdangerform = _React$useState16[1];\n\n    var _React$useState17 = React.useState(false),\n        _React$useState18 = _slicedToArray(_React$useState17, 2),\n        dangerformUser = _React$useState18[0],\n        setdangerformUser = _React$useState18[1];\n\n    var _React$useState19 = React.useState(\"\"),\n        _React$useState20 = _slicedToArray(_React$useState19, 2),\n        statusLogin = _React$useState20[0],\n        setstatusLogin = _React$useState20[1];\n\n    var _React$useState21 = React.useState(false),\n        _React$useState22 = _slicedToArray(_React$useState21, 2),\n        show = _React$useState22[0],\n        setShow = _React$useState22[1];\n\n    function Create() {\n      if (password != password_confirm) {\n        setMessage('senhas n√£o conferem');\n        setdangerform(true);\n      } else {\n        setdangerform(false);\n        axios.get('https://apiarduinowebcontrol.herokuapp.com/', {\n          params: {\n            req: 'newuser',\n            username: username,\n            password: password,\n            name: name,\n            email: email\n          }\n        }).then(function (response) {\n          console.log(response.data);\n          setstatusLogin(response.data);\n        });\n\n        if (statusLogin.warning_error == \"User already exists\") {\n          setdangerformUser(true);\n        } else {\n          setdangerformUser(false);\n          setShow(!show);\n          setTimeout(function () {\n            navigation.navigate('Login');\n          }.bind(this), 2000);\n        }\n      }\n    }\n\n    console.log(statusLogin);\n    var passwordError = dangerform;\n    return React.createElement(Box, {\n      alignItems: \"center\",\n      w: 'xs',\n      bg: 'light.50',\n      borderRadius: 10,\n      shadow: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, React.createElement(Box, {\n      w: \"90%\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, React.createElement(Collapse, {\n      isOpen: show,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, React.createElement(Alert, {\n      w: \"100%\",\n      colorScheme: \"violet\",\n      status: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, React.createElement(VStack, {\n      space: 2,\n      flexShrink: 1,\n      w: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, React.createElement(VStack, {\n      flexShrink: 1,\n      space: 2,\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }, React.createElement(VStack, {\n      space: 1,\n      flexShrink: 1,\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 37\n      }\n    }, React.createElement(Heading, {\n      top: 0,\n      fontSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 41\n      }\n    }, \"Bem vindo! sua conta foi criada com sucesso \\uD83E\\uDD73\"))))))), React.createElement(Box, {\n      w: \"90%\",\n      maxWidth: \"300px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, React.createElement(Center, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, React.createElement(Heading, {\n      top: 1,\n      fontSize: 22,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, \"Cadastre-se\")), React.createElement(FormControl, {\n      marginTop: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, React.createElement(Stack, {\n      mx: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, React.createElement(FormControl.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }, \"Nome \"), React.createElement(Input, {\n      defaultValue: name,\n      borderBottomColor: 'light.200',\n      variant: \"underlined\",\n      type: \"user\",\n      placeholder: \"\",\n      onChangeText: function onChangeText(value) {\n        return setName(value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }), React.createElement(FormControl.HelperText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }))), React.createElement(FormControl, {\n      marginTop: 5,\n      isInvalid: dangerformUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, React.createElement(Stack, {\n      mx: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, React.createElement(FormControl.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, \"Usu\\xE1rio \"), React.createElement(Input, {\n      defaultValue: username,\n      borderBottomColor: 'light.200',\n      variant: \"underlined\",\n      type: \"user\",\n      placeholder: \"\",\n      onChangeText: function onChangeText(value) {\n        return setUsername(value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }), React.createElement(FormControl.HelperText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }), React.createElement(FormControl.ErrorMessage, {\n      leftIcon: React.createElement(WarningOutlineIcon, {\n        size: \"xs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 65\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }, \"Usu\\xE1rio j\\xE1 existe\"))), React.createElement(FormControl, {\n      marginTop: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, React.createElement(Stack, {\n      mx: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, React.createElement(FormControl.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }, \"E-mail \"), React.createElement(Input, {\n      defaultValue: email,\n      borderBottomColor: 'light.200',\n      variant: \"underlined\",\n      type: \"e-mail\",\n      placeholder: \"\",\n      onChangeText: function onChangeText(value) {\n        return setEmail(value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }), React.createElement(FormControl.HelperText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }), React.createElement(FormControl.ErrorMessage, {\n      leftIcon: React.createElement(WarningOutlineIcon, {\n        size: \"xs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 65\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, \"Usu\\xE1rio n\\xE3o existe\"))), React.createElement(FormControl, {\n      marginBottom: 5,\n      isInvalid: passwordError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, React.createElement(Stack, {\n      mx: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, React.createElement(FormControl.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }, \"Senha\"), React.createElement(Input, {\n      borderBottomColor: 'light.200',\n      type: \"password\",\n      variant: \"underlined\",\n      placeholder: \"*******\",\n      onChangeText: setPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }), React.createElement(FormControl.HelperText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }), React.createElement(FormControl.ErrorMessage, {\n      leftIcon: React.createElement(WarningOutlineIcon, {\n        size: \"xs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 65\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, \"Senhas n\\xE3o conferem\"))), React.createElement(FormControl, {\n      marginBottom: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, React.createElement(Stack, {\n      mx: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }, React.createElement(FormControl.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }, \"Confirmar senha\"), React.createElement(Input, {\n      defaultValue: password_confirm,\n      borderBottomColor: 'light.200',\n      type: \"password\",\n      variant: \"underlined\",\n      placeholder: \"*******\",\n      onChangeText: setPassword_confirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    }), React.createElement(FormControl.HelperText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }))), React.createElement(Box, {\n      alignItems: \"center\",\n      marginBottom: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, React.createElement(Button, {\n      bg: 'indigo.800',\n      w: '50%',\n      variant: \"solid\",\n      colorScheme: 'indigo',\n      borderRadius: 20,\n      onPress: function onPress() {\n        return Create();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      color: 'light.50',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }\n    }, \"Criar\")))));\n  }\n\n  return React.createElement(NativeBaseProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, React.createElement(Center, {\n    _dark: {\n      bg: \"blueGray.900\"\n    },\n    _light: {\n      bg: \"violet.900\"\n    },\n    px: 4,\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, React.createElement(BoxForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/dariojr/Documents/GitHub/ArduinoHomeControl/components/screens/SingUp.js"],"names":["NativeBaseProvider","Collapse","IconButton","CloseIcon","Alert","Stack","WarningOutlineIcon","Image","Modal","Actionsheet","Spinner","useClipboard","Box","Text","Badge","Divider","Heading","VStack","Switch","FormControl","Input","Link","Button","Icon","HStack","Center","Pressable","View","Container","ZStack","ScrollView","Toast","React","axios","arduino","useState","SingUp","navigation","show","setShow","BoxForm","username","setUsername","password","setPassword","password_confirm","setPassword_confirm","email","setEmail","name","setName","message","setMessage","dangerform","setdangerform","dangerformUser","setdangerformUser","statusLogin","setstatusLogin","Create","get","params","req","then","response","console","log","data","warning_error","setTimeout","navigate","bind","passwordError","value","bg"],"mappings":"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","sourcesContent":["import { NativeBaseProvider, Collapse, IconButton, CloseIcon, Alert, Stack, WarningOutlineIcon, Image, Modal, Actionsheet, Spinner, useClipboard, Box, Text, Badge, Divider, Heading, VStack, Switch, FormControl, Input, Link, Button, Icon, HStack, Center, Pressable, View, Container, ZStack, ScrollView, Toast } from \"native-base\";\nimport React from \"react\";\nimport axios from 'axios';\nimport arduino from '../img/arduino.png';\nimport { useState } from 'react';\n\n\nexport default function SingUp({ navigation }) {\n    const [show, setShow] = React.useState(false);\n\n\n    function BoxForm() {\n        const [username, setUsername] = React.useState(\"\");\n        const [password, setPassword] = React.useState(\"\");\n        const [password_confirm, setPassword_confirm] = React.useState(\"\");\n        const [email, setEmail] = React.useState(\"\");\n        const [name, setName] = React.useState(\"\");\n        const [message, setMessage] = React.useState(\"\");\n        const [dangerform, setdangerform] = React.useState(false);\n        const [dangerformUser, setdangerformUser] = React.useState(false);\n        const [statusLogin, setstatusLogin] = React.useState(\"\");\n\n        const [show, setShow] = React.useState(false);\n\n\n        function Create() {\n            if (password != password_confirm) {\n                setMessage('senhas n√£o conferem');\n                setdangerform(true)\n            } else {\n                setdangerform(false)\n                axios.get('https://apiarduinowebcontrol.herokuapp.com/', {\n                    params: {\n                        req: 'newuser',\n                        username: username,\n                        password: password,\n                        name: name,\n                        email: email\n                    }\n                })\n                    .then(function (response) {\n                        // manipula o sucesso da requisi√ß√£o\n                        console.log(response.data);\n                        setstatusLogin(response.data)\n                    })\n                if (statusLogin.warning_error == \"User already exists\") {\n                    setdangerformUser(true);\n                } else {\n                    setdangerformUser(false);\n                    setShow(!show)\n                    setTimeout(\n                        function () {\n                            navigation.navigate('Login')\n                        }\n                            .bind(this),\n                        2000\n                    );\n                }\n            }\n        }\n        console.log(statusLogin)\n        var passwordError = dangerform;\n\n\n\n        return (\n            <Box alignItems=\"center\" w={'xs'} bg={'light.50'} borderRadius={10} shadow={5}>\n                <Box w=\"90%\" alignItems=\"center\">\n                    <Collapse isOpen={show}>\n                        <Alert w=\"100%\" colorScheme=\"violet\" status=\"success\">\n                            <VStack space={2} flexShrink={1} w=\"100%\">\n                                <VStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\n                                    <VStack space={1} flexShrink={1} alignItems=\"center\">\n\n                                        <Heading top={0} fontSize={20}>\n                                            Bem vindo! sua conta foi criada com sucesso ü•≥\n                                        </Heading>\n\n\n                                    </VStack>\n                                </VStack>\n                            </VStack>\n                        </Alert>\n                    </Collapse>\n\n                </Box>\n                <Box w=\"90%\" maxWidth=\"300px\">\n                    <Center>\n                        <Heading top={1} fontSize={22}>Cadastre-se</Heading>\n                    </Center>\n\n                    <FormControl marginTop={5} >\n                        <Stack mx=\"4\" >\n                            <FormControl.Label >Nome </FormControl.Label>\n                            <Input defaultValue={name} borderBottomColor={'light.200'} variant=\"underlined\" type=\"user\" placeholder=\"\"\n                                onChangeText={(value) => setName(value)}\n                            ></Input>\n                            <FormControl.HelperText>\n\n                            </FormControl.HelperText>\n\n                        </Stack>\n                    </FormControl>\n\n                    <FormControl marginTop={5} isInvalid={dangerformUser}>\n                        <Stack mx=\"4\" >\n                            <FormControl.Label >Usu√°rio </FormControl.Label>\n                            <Input defaultValue={username} borderBottomColor={'light.200'} variant=\"underlined\" type=\"user\" placeholder=\"\"\n                                onChangeText={(value) => setUsername(value)}\n                            ></Input>\n                            <FormControl.HelperText>\n\n                            </FormControl.HelperText>\n                            <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                                Usu√°rio j√° existe\n                            </FormControl.ErrorMessage>\n                        </Stack>\n                    </FormControl>\n\n                    <FormControl marginTop={5} >\n                        <Stack mx=\"4\" >\n                            <FormControl.Label >E-mail </FormControl.Label>\n                            <Input defaultValue={email} borderBottomColor={'light.200'} variant=\"underlined\" type=\"e-mail\" placeholder=\"\"\n                                onChangeText={(value) => setEmail(value)}\n                            ></Input>\n                            <FormControl.HelperText>\n\n                            </FormControl.HelperText>\n                            <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                                Usu√°rio n√£o existe\n                            </FormControl.ErrorMessage>\n                        </Stack>\n                    </FormControl>\n\n                    <FormControl marginBottom={5} isInvalid={passwordError}>\n                        <Stack mx=\"4\" >\n                            <FormControl.Label >Senha</FormControl.Label>\n                            <Input borderBottomColor={'light.200'} type=\"password\" variant=\"underlined\" placeholder=\"*******\"\n                                onChangeText={setPassword} />\n\n                            <FormControl.HelperText>\n\n                            </FormControl.HelperText>\n                            <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                                Senhas n√£o conferem\n                            </FormControl.ErrorMessage>\n                        </Stack>\n                    </FormControl>\n\n                    <FormControl marginBottom={5} >\n                        <Stack mx=\"4\" >\n                            <FormControl.Label >Confirmar senha</FormControl.Label>\n                            <Input defaultValue={password_confirm} borderBottomColor={'light.200'} type=\"password\" variant=\"underlined\" placeholder=\"*******\"\n                                onChangeText={setPassword_confirm} />\n\n                            <FormControl.HelperText>\n\n                            </FormControl.HelperText>\n\n                        </Stack>\n                    </FormControl>\n\n                    <Box alignItems=\"center\" marginBottom={5}>\n                        <Button bg={'indigo.800'} w={'50%'} variant={\"solid\"} colorScheme={'indigo'} borderRadius={20} onPress={() => Create()}>\n                            <Text color={'light.50'}>Criar</Text>\n                        </Button>\n                    </Box>\n\n                </Box>\n\n\n\n\n\n            </Box>);\n    }\n\n\n\n\n    return (\n        <NativeBaseProvider>\n\n            <Center _dark={{ bg: \"blueGray.900\" }} _light={{ bg: \"violet.900\" }} px={4} flex={1}>\n\n                <BoxForm></BoxForm>\n            </Center>\n        </NativeBaseProvider>\n    );\n}"]},"metadata":{},"sourceType":"module"}