{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/dariojr/Documents/GitHub/ArduinoHomeControl/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar Stack = createNativeStackNavigator();\nimport Login from \"./components/screens/Login\";\nimport DashBorard from \"./components/screens/dashboard\";\nimport SingUp from \"./components/screens/SingUp\";\nimport Acct from \"./components/screens/Acct\";\nexport default function App() {\n  var _useState = useState('Login'),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginStatus = _useState2[0],\n      setLoginState = _useState2[1];\n\n  useEffect(function () {\n    var getData = function getData() {\n      var value;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('LoginSave'));\n\n            case 3:\n              value = _context.sent;\n\n              if (value !== null) {\n                setLoginState(value);\n              }\n\n              _context.next = 9;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    getData();\n  });\n\n  function CheckState() {\n    return React.createElement(NavigationContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Navigator, {\n      initialRouteName: loginStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Login\",\n      component: Login,\n      options: {\n        headerShown: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"DashBorard\",\n      component: DashBorard,\n      options: {\n        headerShown: false,\n        headerBackVisible: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"SingUp\",\n      component: SingUp,\n      options: {\n        headerShown: false,\n        headerBackVisible: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Acct\",\n      component: Acct,\n      options: {\n        headerShown: true,\n        headerBackVisible: true,\n        headerBackTitle: 'Voltar',\n        headerTitle: \"Conta\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return React.createElement(CheckState, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/dariojr/Documents/GitHub/ArduinoHomeControl/App.js"],"names":["React","NavigationContainer","createNativeStackNavigator","useState","useEffect","AsyncStorage","Stack","Login","DashBorard","SingUp","Acct","App","loginStatus","setLoginState","getData","getItem","value","CheckState","headerShown","headerBackVisible","headerBackTitle","headerTitle"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,IAAMC,KAAK,GAAGJ,0BAA0B,EAAxC;AAGA,OAAOK,KAAP;AACA,OAAOC,UAAP;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AAGA,eAAe,SAASC,GAAT,GAAe;AAE5B,kBAAqCR,QAAQ,CAAC,OAAD,CAA7C;AAAA;AAAA,MAAOS,WAAP;AAAA,MAAoBC,aAApB;;AACAT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMU,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEQT,YAAY,CAACU,OAAb,CAAqB,WAArB,CAFR;;AAAA;AAENC,cAAAA,KAFM;;AAGZ,kBAAIA,KAAK,KAAK,IAAd,EAAoB;AAClBH,gBAAAA,aAAa,CAACG,KAAD,CAAb;AACD;;AALW;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AASAF,IAAAA,OAAO;AAGR,GAbQ,CAAT;;AAeA,WAASG,UAAT,GAAqB;AACnB,WACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,MAAA,gBAAgB,EAAEL,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,OAAnB;AAA2B,MAAA,SAAS,EAAEL,KAAtC;AAA6C,MAAA,OAAO,EAAE;AAAEW,QAAAA,WAAW,EAAE;AAAf,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,YAAnB;AAAgC,MAAA,SAAS,EAAEV,UAA3C;AAAuD,MAAA,OAAO,EAAE;AAAEU,QAAAA,WAAW,EAAE,KAAf;AAAsBC,QAAAA,iBAAiB,EAAE;AAAzC,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,SAAS,EAAEV,MAAvC;AAA+C,MAAA,OAAO,EAAE;AAAES,QAAAA,WAAW,EAAE,KAAf;AAAsBC,QAAAA,iBAAiB,EAAE;AAAzC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,SAAS,EAAET,IAArC;AAA2C,MAAA,OAAO,EAAE;AAAEQ,QAAAA,WAAW,EAAE,IAAf;AAAqBC,QAAAA,iBAAiB,EAAE,IAAxC;AAA8CC,QAAAA,eAAe,EAAE,QAA/D;AAAyEC,QAAAA,WAAW,EAAE;AAAtF,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CADF;AAWD;;AACD,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD","sourcesContent":["import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nconst Stack = createNativeStackNavigator();\n\n//screens\nimport Login from './components/screens/Login';\nimport DashBorard from './components/screens/dashboard';\nimport SingUp from './components/screens/SingUp';\nimport Acct from './components/screens/Acct';\n\n\nexport default function App() {\n\n  const [loginStatus, setLoginState] = useState('Login');\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const value = await AsyncStorage.getItem('LoginSave')\n        if (value !== null) {\n          setLoginState(value)\n        }\n      } catch (e) {\n      }\n    }\n    getData();\n\n\n  })\n  \n  function CheckState(){\n    return (\n      <NavigationContainer>\n        <Stack.Navigator initialRouteName={loginStatus}>\n          <Stack.Screen name=\"Login\" component={Login} options={{ headerShown: false }} />\n          <Stack.Screen name=\"DashBorard\" component={DashBorard} options={{ headerShown: false, headerBackVisible: false }} />\n          <Stack.Screen name=\"SingUp\" component={SingUp} options={{ headerShown: false, headerBackVisible: false }} />\n          <Stack.Screen name=\"Acct\" component={Acct} options={{ headerShown: true, headerBackVisible: true, headerBackTitle: 'Voltar', headerTitle: \"Conta\" }} />\n  \n  \n        </Stack.Navigator>\n      </NavigationContainer>)\n  }\n  return(\n    <CheckState></CheckState>\n  )\n\n\n}\n\n"]},"metadata":{},"sourceType":"module"}